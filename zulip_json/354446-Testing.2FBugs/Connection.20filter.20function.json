[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> <br>\nToday's master code base.<br>\nA tricky? connections filter bug: <br>\nIf \"NMEA Debug window\" is open a connection filter does work. If the Debug window in closed the filter is not used for output connection(s).</p>\n<p>Set up:<br>\nOn PC1 I use a TCP <a href=\"http://signalk.stupan.se\">signalk.stupan.se</a> : 10114 Input connection. I've set a filter to receive only \"AIVDM\"<br>\nI use UDP:255.255.255.255:10115 output connection. No filter.<br>\nThe UDP:10115 is used as input on another OCPN at PC2.</p>\n<p>The filter is working all time on PC1, only AIVDM is used by OCPN.</p>\n<p>When the \"NMEA Debug Window\" is open on PC1:<br>\nOnly \"AIVDM\" is output on port 10115. Thus on PC2 only \"AIVDM\" is received.</p>\n<p>When I close \"NMEA Debug Window\" on PC1:<br>\nThe TCP filter is not working and all what's received on PC1 TCP:10114 is also output to UDP:10115 and thus received on PC2. Easily detected by a PC2 Debug window.</p>\n<p>If I, without doing anything else, again open \"NMEA Debug Window\" on PC1 the filter is again working and only AIVDM is received on PC2.</p>\n<p>The bug can easily be repeated:<br>\nOpen \"NMEA Debug Window\" on PC1; the TCP filter is working as expected everywhere.<br>\nClose \"NMEA Debug Window\" on PC1; the TCP input filter is bypassed to the UDP:10115 output connection. (Again, PC1 reception and messages used is not affected)</p>\n<p>If needed I can debug but need some hints where to look.<br>\nHåkan</p>",
        "id": 501784139,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740484220
    },
    {
        "content": "<p>hm... First question: what happens if you make the same test against <a href=\"https://github.com/opencpn/OpenCPN/issues/4324\">#4324</a> ?</p>",
        "id": 501817321,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740493097
    },
    {
        "content": "<p>I haven't tested. No time for now since I'm preparing my system for a OCPN presentation. :)</p>",
        "id": 501822318,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740494372
    },
    {
        "content": "<p>OK, there is time...</p>",
        "id": 501822376,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740494393
    },
    {
        "content": "<p>And no idea where to debug it?</p>",
        "id": 501822494,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740494417
    },
    {
        "content": "<p>If it's not an issue in <a href=\"https://github.com/opencpn/OpenCPN/issues/4327\">#4327</a> there is really no point  debugging it -- <a href=\"https://github.com/opencpn/OpenCPN/issues/4327\">#4327</a> will land in a week or so, I guess. If it's still an issue there I can certainly give you some hints.</p>",
        "id": 501822861,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740494522
    },
    {
        "content": "<p>Ok, I'll have a new look for changes in 4327 the coming days.</p>\n<p>Partly related:<br>\ncan we have a more enlightening status than \"undefined\" for a UDP output when data really or could flow?<br>\n<a href=\"/user_uploads/33951/mVjwaULNuKfD7vyHW4usC0Rr/bild.png\">bild.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/33951/mVjwaULNuKfD7vyHW4usC0Rr/bild.png\" title=\"bild.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1853x231\" src=\"/user_uploads/thumbnail/33951/mVjwaULNuKfD7vyHW4usC0Rr/bild.png/840x560.webp\"></a></div>",
        "id": 501989443,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740559278
    },
    {
        "content": "<p>That picture really shows a bug when stating that \"Device is unavailable\" (I presume that this is what you refer to). The status should only be visible if the network send operation fails. </p>\n<p>On a sidenote failures when sending UDP packets is very, very unlikely.</p>\n<p>Will have a look.</p>",
        "id": 501990782,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740559682
    },
    {
        "content": "<p>Agree that UDP failures are not relevant but a user might be confused about \"unavailable\"<br>\nThanks for looking.</p>",
        "id": 501997587,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740561931
    },
    {
        "content": "<blockquote>\n<p>A tricky? connections filter bug -- <a class=\"message-link\" href=\"/#narrow/channel/354446-Testing.2FBugs/topic/Connection.20filter.20function/near/501784139\">#Testing/Bugs &gt; Connection filter function @ 💬</a> </p>\n</blockquote>\n<p>I cannot reproduce this using code from <a href=\"https://github.com/opencpn/OpenCPN/issues/4324\">#4324</a>. The filter works as input or output filter,  opening/closing the data monitor window makes no difference.</p>\n<p>Don't really care about master  in this situation.</p>",
        "id": 502568241,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740746149
    },
    {
        "content": "<blockquote>\n<p>can we have a more enlightening status than \"undefined\" for a UDP output when data really or could flow?</p>\n</blockquote>\n<p>Fixed in  <a href=\"https://github.com/opencpn/OpenCPN/commit/d5e53a5f4\">d5e53a5f4</a>. I wouldn't be surprised if there are more bugs like this.</p>",
        "id": 502580957,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740750011
    },
    {
        "content": "<p>Confirm (partly) the UDP status flag.<br>\nOnce used the status is [buck]\"Flowing..\" After that [!]\"No data flowing...\" Very good.<br>\n(partly): From O upstart and until any data starts flowing the status is [X ] \"The device is unavailable\".  Can possible confuse some.  But anyhow much better now.</p>",
        "id": 502603092,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740756145
    },
    {
        "content": "<p>I tested <a href=\"https://github.com/opencpn/OpenCPN/issues/4324\">#4324</a> to check for the output while data monitor is open/closed.<br>\nNo success. It brakes at comm_bridge.cpp : 1170  as soon data start flowing on a port.<br>\nCall stack:</p>\n<div class=\"codehilite\" data-code-language=\"CSS\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\">   </span><span class=\"nt\">opencpn</span><span class=\"p\">.</span><span class=\"nc\">exe</span><span class=\"o\">!</span><span class=\"nt\">CommBridge</span><span class=\"p\">::</span><span class=\"nd\">GetPriorityKey</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">NavMsg</span><span class=\"w\"> </span><span class=\"nt\">const</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nt\">msg</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nt\">Line</span><span class=\"w\"> </span><span class=\"nt\">1170</span><span class=\"w\"> </span><span class=\"nt\">C</span><span class=\"o\">++</span>\n<span class=\"w\">    </span><span class=\"nt\">opencpn</span><span class=\"p\">.</span><span class=\"nc\">exe</span><span class=\"o\">!</span><span class=\"nt\">CommBridge</span><span class=\"p\">::</span><span class=\"nd\">EvalPriority</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">NavMsg</span><span class=\"w\"> </span><span class=\"nt\">const</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nt\">msg</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"nt\">PriorityContainer</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"nt\">active_priority</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">unordered_map</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">,</span><span class=\"nt\">int</span><span class=\"o\">,</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">hash</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">&gt;,</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">equal_to</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">&gt;,</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">allocator</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">pair</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"w\"> </span><span class=\"nt\">const</span><span class=\"w\"> </span><span class=\"o\">,</span><span class=\"nt\">int</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"nt\">priority_map</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nt\">Line</span><span class=\"w\"> </span><span class=\"nt\">1207</span><span class=\"w\">  </span><span class=\"nt\">C</span><span class=\"o\">++</span>\n<span class=\"w\">    </span><span class=\"nt\">opencpn</span><span class=\"p\">.</span><span class=\"nc\">exe</span><span class=\"o\">!</span><span class=\"nt\">CommBridge</span><span class=\"p\">::</span><span class=\"nd\">HandleN0183_RMC</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">Nmea0183Msg</span><span class=\"w\"> </span><span class=\"nt\">const</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nt\">n0183_msg</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nt\">Line</span><span class=\"w\"> </span><span class=\"nt\">687</span><span class=\"w\">  </span><span class=\"nt\">C</span><span class=\"o\">++</span>\n<span class=\"w\">    </span><span class=\"o\">[</span><span class=\"nt\">Inline</span><span class=\"w\"> </span><span class=\"nt\">Frame</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"nt\">opencpn</span><span class=\"p\">.</span><span class=\"nc\">exe</span><span class=\"o\">!</span><span class=\"nt\">CommBridge</span><span class=\"p\">::</span><span class=\"nd\">InitCommListeners</span><span class=\"p\">::</span><span class=\"nd\">__l2</span><span class=\"o\">::&lt;</span><span class=\"nt\">lambda_f9e390472c44b870b31f54b575f7443b</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"nd\">operator</span><span class=\"o\">()(</span><span class=\"nt\">ObservedEvt</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nt\">Line</span><span class=\"w\"> </span><span class=\"nt\">333</span><span class=\"w\"> </span><span class=\"nt\">C</span><span class=\"o\">++</span>\n</code></pre></div>\n<p>\"source\" value:  À\"A 0\u0012\u0011\u0001€ÀÐàð\u000bØ–­!\u0007</p>",
        "id": 502610163,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1740758130
    },
    {
        "content": "<p>I checked using two independent opencpn devices, the source is the tested <a href=\"https://github.com/opencpn/OpenCPN/issues/4324\">#4324</a>, the sink master.</p>\n<p>Sidenote: It does not brake (bromsa), it breaks :)</p>",
        "id": 502610931,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1740758357
    }
]