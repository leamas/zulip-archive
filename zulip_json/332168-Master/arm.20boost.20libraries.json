[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span>  About to merge <a href=\"https://github.com/opencpn/OpenCPN/issues/3539\">#3539</a>. This moves c++ standard to c++17.</p>\n<p>Problem with the unversal build. It's using boost to substitute the missing std::filesystem in MacOS 10.13, boost::filesystem  effectively works as a preview.</p>\n<p>Now, we can link to homebrew's boost library. However, the arm build fails. I assume we need to build boost for arm and add to the bundle (?)</p>\n<p>Thoughts?</p>",
        "id": 408866895,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702978348
    },
    {
        "content": "<p>At a closer look. it seems that homebrew does provide arm builds if used properly. It's just that I don't know how to do that. So, if you have some time...</p>",
        "id": 408872946,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702979549
    },
    {
        "content": "<p>No, we can't use Homebrew. If we need new dependency it must go to either <code>/libs/</code> and be built with the application or to  <code>/ci/macos-universal-deps.sh</code> and become part of the dependency bundle.</p>",
        "id": 408904895,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702984717
    },
    {
        "content": "<p>ok... if I make a build. can you add it to the bundle?</p>",
        "id": 408905178,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702984772
    },
    {
        "content": "<p>Sure. Can you give me the URL of the Boost tarball that we need to build?</p>",
        "id": 408905701,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702984857
    },
    {
        "content": "<p>They are at sourceforge :<a href=\"https://sourceforge.net/projects/boost/files/boost/1.82.0/\">https://sourceforge.net/projects/boost/files/boost/1.82.0/</a></p>\n<p>Building boost is non-trivial, they are using Yet Another Build System...<br>\nSome info here: <a href=\"https://theboostcpplibraries.com/introduction-installation\">https://theboostcpplibraries.com/introduction-installation</a></p>",
        "id": 408908995,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702985427
    },
    {
        "content": "<p>Do we need the whole boost just because of the <code>filesystem</code> stuff?</p>",
        "id": 408915643,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702986594
    },
    {
        "content": "<p>I remember that when I needed just <code>asio</code> it was happy living without the monster</p>",
        "id": 408915872,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702986633
    },
    {
        "content": "<p>And one more thing, why do we need it at all for the universal build? It will never run on 10.x</p>",
        "id": 408916476,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702986729
    },
    {
        "content": "<p>What's actiually needed is filesystem + system, the latter is a dependency of filesystem.</p>\n<p>However, all remaining stuff is header only and thus included in <em>include/</em>.  And while it probaly probably possible to figure out some parts which can be stripped therefrom, I don't think it's worth the effort.  The directory is somewhat big, but compresses well. </p>\n<p>My android port (not used for various reasons) contains binaries for two architectures and the include/ directory. All in all about 17 MB</p>",
        "id": 408928911,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702990782
    },
    {
        "content": "<blockquote>\n<p>nd one more thing, why do we need it at all for the universal build? It will never run on 10.x</p>\n</blockquote>\n<p>This is <strong>the</strong>  comment.  </p>\n<p>Still, the build links to boost. This seems to be about the ci runner, the compiler version is 13.4.1 . If I understand this correctly it is about using an old xcode version for compiling.  What's needed for std:.filesystem support is a compiler &gt;= 15.0.</p>\n<p>CAn we handle this by updating the development environment, or would  it break the 10.13 target?</p>",
        "id": 408933024,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702992187
    },
    {
        "content": "<blockquote>\n<p>is a compiler &gt;= 15.0.</p>\n</blockquote>\n<p>i. e., clang &gt;= 15.0</p>",
        "id": 408934161,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702992560
    },
    {
        "content": "<p>i. e.,  is there anything blocking us from using Xcode 15.0.0 or 15.1.0, both of which available for both arm and intel: <a href=\"https://circleci.com/docs/testing-ios/#supported-xcode-versions\">https://circleci.com/docs/testing-ios/#supported-xcode-versions</a></p>",
        "id": 408936970,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702993557
    },
    {
        "content": "<p>I read a bit and it seems that whatever we do, <code>std::filesystem</code> can be used only with macOS 10.15 and newer deployment targets. Anything built like that does not run on 10.13 or 10.14</p>",
        "id": 408937918,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702993863
    },
    {
        "content": "<p>I kind of can't believe that a C++17 feature like this would be available only with the absolutely latest compiler toolchain available on macOS, which Xcode 15 is, the problem should really be the SDK used for the old deployment targets.</p>",
        "id": 408938508,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702994060
    },
    {
        "content": "<p>Yes. But for 10.13, as you say, we only build intel stuff. here we can use the homebrew boost, specifically boost::filesystem which effectively is a preview of std::filesystem. The overall code to handle this is already in place. This already at least compiles and links.</p>",
        "id": 408938690,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702994133
    },
    {
        "content": "<p>My question: what is the target for the universal build?</p>",
        "id": 408938883,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702994192
    },
    {
        "content": "<p>Yes, and for the universal build we use 11 deployment target, so we should not need boost at all</p>",
        "id": 408938918,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702994206
    },
    {
        "content": "<p>That is, we could compile the universal build using Xcode 15.0 or higher ?</p>",
        "id": 408939035,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702994250
    },
    {
        "content": "<p>Probably yes, the product needs to be tried on macOS 11</p>",
        "id": 408939309,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702994331
    },
    {
        "content": "<p>But the dependency bundle already is built with Xcode 15 anyway, so I do not see much reason why upgrading the compiler used in the CI builds should break something</p>",
        "id": 408939516,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702994398
    },
    {
        "content": "<p>The bundle for the universal build, the one for Intel is built on 10.14 using Xcode 11</p>",
        "id": 408939690,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702994438
    },
    {
        "content": "<p>So, if I update Xcode as part of  <a href=\"https://github.com/opencpn/OpenCPN/issues/3539\">#3539</a> you are on board? If we run into problems it can of course be reverted and we will have to evaluate the situation again. But, it's  worth a try.</p>\n<p>Or?</p>",
        "id": 408940051,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702994521
    },
    {
        "content": "<p>Least costly is to try, for sure.</p>",
        "id": 408940238,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702994557
    },
    {
        "content": "<p>OK. I'll add that to the PR. It will probably go in today</p>\n<p>I could merge this myself, but since the focus is android I think it's better if Dave pushes the final button. We have  had a similar discussion with roughly the same result for android.</p>",
        "id": 408940621,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702994668
    },
    {
        "content": "<p>Seems to compile and link.</p>",
        "id": 408944820,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702995988
    },
    {
        "content": "<p>Yes, it would be surprising if it didn't, but we need to see it running on old enough system with macOS 11. Which I don't have.</p>",
        "id": 408945972,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702996353
    },
    {
        "content": "<p>I have a virtual Monterey, but that's about how close I am. There is also a Catalina, if it runs on that I guess we should be happy...</p>\n<p>It is perfectly possible to set up a virtual Big Sur, but a lot of work...</p>",
        "id": 408946788,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702996587
    },
    {
        "content": "<p>Yes, but for me even just downloading the image takes hours...</p>",
        "id": 408948563,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1702997160
    },
    {
        "content": "<p>A little faster for me. I'll try to do it, but later, at earliest after Xmas</p>\n<p>Currently hunting bugs and making painful rebasing on open PRs...</p>",
        "id": 408951762,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1702998099
    },
    {
        "content": "<p>There's still some problem in the Mac build - <a href=\"https://app.circleci.com/pipelines/github/OpenCPN/OpenCPN/2167/workflows/d7ba64ad-e193-4ef8-8dd9-3bb513a6d594/jobs/6620?invite=true#step-103-116969_108\">https://app.circleci.com/pipelines/github/OpenCPN/OpenCPN/2167/workflows/d7ba64ad-e193-4ef8-8dd9-3bb513a6d594/jobs/6620?invite=true#step-103-116969_108</a></p>",
        "id": 408963928,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1703001834
    },
    {
        "content": "<p>Yes, we  have talked about it earlier. The build picks up wrong geodesic.h. As I said, this is will eventually be fixed by <a href=\"https://github.com/opencpn/OpenCPN/issues/3540\">#3540</a>.  I tried the BEFORE argument to cmake target_include_directories to no avail. </p>\n<p>It <strong>can</strong> be fixed in current state, but for now focusing on my big things  <a href=\"https://github.com/opencpn/OpenCPN/issues/3502\">#3502</a> and eventually <a href=\"https://github.com/opencpn/OpenCPN/issues/3540\">#3540</a></p>",
        "id": 408964970,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703002135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span> </p>\n<p>And we have new problems with the MacOS builds after using -e: <a href=\"https://app.circleci.com/pipelines/github/leamas/OpenCPN/3893/workflows/69d624ee-4d19-42bf-8f3b-bcdbcb03ee39/jobs/6950\">https://app.circleci.com/pipelines/github/leamas/OpenCPN/3893/workflows/69d624ee-4d19-42bf-8f3b-bcdbcb03ee39/jobs/6950</a></p>\n<p>Basically, error codes we have ignored now breaks the builds in an early stage.  Perhaps we should revert that change? The alternative would be to actually fix all these non-significant error returns.</p>\n<p>BTW: It was these kind of problems which made me go for another solution for windows: Here I check that the build artifacts are available after the build rather than using -e</p>",
        "id": 409041882,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703032783
    },
    {
        "content": "<p>We can sure simply move the <code>set -e</code> right in front of the build itself, but I will have a look what produces the non-zero error codes and if it can be fixed.</p>",
        "id": 409042689,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1703033054
    },
    {
        "content": "<p>OK. Your desk...</p>",
        "id": 409042791,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703033092
    },
    {
        "content": "<p>Looks like adding <code>--overwrite</code> to brew installing boost might solve it, I will try as we probably do want those updated packages there anyway. Maybe, maybe they will not be built properly to work on 10.13. I hate this.</p>",
        "id": 409046215,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1703034180
    },
    {
        "content": "<p>OK. it does not do what I was hoping for, so let's fail just on actual build failures and see if it is good enough</p>",
        "id": 409052603,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1703035904
    },
    {
        "content": "<p>The broken Python is completely new... No idea why everything worked just a couple of hours ago. We will probably have to move the dependency bundle for the universal build out of /usr/local to solve it. Which will very likely make a mess in the detection of the dependencies by cmake. Not something I will resolve tonight.</p>",
        "id": 409065206,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1703038822
    },
    {
        "content": "<p>Did a quick check where the first line in <a href=\"http://universal-build-macos.sh\">universal-build-macos.sh</a> was <code>exit  1</code>. Logged in to the build host and did <code>python3 install pip</code>. And indeed, same error.</p>\n<p>Looks like the circleci image is updated to  a broken state.</p>",
        "id": 409119026,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703060701
    },
    {
        "content": "<p>Filed a circleci support ticket</p>",
        "id": 409121379,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703061773
    },
    {
        "content": "<p>Leaving this for now. I'll let you know if/when circleci gets in touch</p>",
        "id": 409126794,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703063874
    },
    {
        "content": "<p>FWIW, I have MacBook with BigSur/x86 (11.7.10) available for test, whenever...</p>",
        "id": 409208249,
        "sender_full_name": "Dave Register",
        "timestamp": 1703085764
    },
    {
        "content": "<p>Fixed the macos builds, at least the CCI ones runs fine by me. No feedback from CCI, but whatever the problem was it is now fixed by them</p>",
        "id": 409287820,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703122663
    }
]