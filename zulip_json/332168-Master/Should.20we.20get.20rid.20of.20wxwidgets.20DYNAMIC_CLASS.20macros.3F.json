[
    {
        "content": "<p>I get warnings like below after building master on my OrangePi.  Looking into this I come to a question: Should we remove all DECLARE_DYNAMIC_CLASS and IMPLEMENT_DYNAMIC_CLASS?</p>\n<p>The actual use for it  is  seemingly 42  occurences of <code>wxDynamicCast</code> which at a glance should be easy to replace with the standard <code>dynamic_cast&lt;type&gt;()</code>.</p>\n<p>These DYNAMIC_CLASS things looks like artifacts from a distant past before C++11 to me.</p>\n<p>Reading at <a href=\"https://docs.wxwidgets.org/latest/overview_rtti.html\">https://docs.wxwidgets.org/latest/overview_rtti.html</a> I don't see any  reason to use these macros. We are already on C++17, there is full RTTI information generated by the compiler.</p>\n<p>Furthermore,. the error message annoys me since  linking the same object twice is an accepted way to handle circular dependencies.</p>\n<p>Thoughts?</p>\n<p><a href=\"/user_uploads/33951/VLUmnC8CI1pVV_6m4dVPi-r9/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/33951/VLUmnC8CI1pVV_6m4dVPi-r9/image.png\" title=\"image.png\"><img data-original-dimensions=\"1419x209\" src=\"/user_uploads/thumbnail/33951/VLUmnC8CI1pVV_6m4dVPi-r9/image.png/840x560.webp\"></a></div>",
        "id": 474011271,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1727781247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span>  ^</p>",
        "id": 474011835,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1727781435
    },
    {
        "content": "<p>If we can get rid of it, we should.</p>",
        "id": 474015190,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1727782717
    },
    {
        "content": "<p>I agree, generally.  That debug ASSERT is always annoying.<br>\nFor the most part, this DYNAMIC_CLASS macro is indeed a holdover from early c++ implementation of wxWidgets, and our early work. IIRC, there are only one or two instances where a class is instantiated by name, using RTTI.  These should surface during a refactor easily enough.</p>",
        "id": 474039453,
        "sender_full_name": "Dave Register",
        "timestamp": 1727789598
    },
    {
        "content": "<p>ok, putting it on my TODO list</p>",
        "id": 474120721,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1727814154
    }
]