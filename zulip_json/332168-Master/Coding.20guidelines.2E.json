[
    {
        "content": "<p>Sebastian Rosset did some in mye eyes good work in <a href=\"https://github.com/opencpn/OpenCPN/issues/4139\">#4139</a>.  I tend to think we should merge this, but just doing this without any discussion probably does not lead to anything meaningful.</p>\n<p>The new, proposed guidelines are available at <a href=\"http://mumin.crabdance.com/manual/opencpn-dev/coding-guidelines.html\">http://mumin.crabdance.com/manual/opencpn-dev/coding-guidelines.html</a></p>\n<p>Short question: good enough?</p>\n<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span>   (everyone is of course welcome to the party!)</p>",
        "id": 479953494,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1730405953
    },
    {
        "content": "<p>Looks OK to me</p>",
        "id": 479970015,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1730414859
    },
    {
        "content": "<p>Ditto, OK by me</p>",
        "id": 479978690,
        "sender_full_name": "Dave Register",
        "timestamp": 1730421674
    },
    {
        "content": "<p>Sorry didn't saw this but wrote a comment <a href=\"https://github.com/OpenCPN/OpenCPN/pull/4139#issuecomment-2451819922\">here</a></p>",
        "id": 480046328,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1730465377
    },
    {
        "content": "<p>Anyway, new guidelines merged and published <a href=\"https://opencpn-manuals.github.io/main/opencpn-dev/coding-guidelines.html\">here</a></p>",
        "id": 480048822,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1730466525
    },
    {
        "content": "<p>I would have fixed it with the following general Windows advice:<br>\nIf acceptabel I could PR a change to the manual? </p>\n<div class=\"codehilite\"><pre><span></span><code>To do this, just install the pre-commit program from https://pre-commit.com/:\n\n    $ pip install pre-commit\n\n    On Windows:\n\n      $ py -m pip install pre-commit\n\nand then, in the project top directory\n\n    $ pre-commit install\n\n    Windows advices:\n     You need a path to find &quot;pre-commit.exe&quot;. e.g PATH=........;C:\\Python39\\Scripts\n       This path can be a one time or permanent.\n     Then: (Note the -f switch!)\n\n    $ pre-commit install -f\n\nThe above would result in e.g.: &quot;pre-commit installed at .git\\hooks\\pre-commit&quot;\n\nwhich will pick up the configuration from _.pre-commit-config.yaml_ which is\n</code></pre></div>",
        "id": 480198552,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1730537161
    },
    {
        "content": "<p>hm...  A PR is of course the way to go. I think the windows mess is large enough to warrant a separate subheading.</p>\n<p>More bits and pieces on this:</p>\n<hr>\n<p>The location to pre-commit .exe depends on if running with administrative privileges or not. When running as administrator the path can be found  by <code>python -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\"</code></p>\n<p>When running as regular user the path is someting like  <em>C:\\Users\\alec\\AppData\\Roaming\\Python\\Python310\\Scripts</em>. The actual python version (here Python310) will differ (and of course also the username)</p>\n<p>Another solution on WIndows is to use WSL which offers a simple user experience</p>\n<hr>\n<p>Please  take whateveryou find useful in this and make a PR.</p>",
        "id": 480199778,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1730538193
    }
]