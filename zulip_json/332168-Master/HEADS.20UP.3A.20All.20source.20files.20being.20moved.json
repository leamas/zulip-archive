[
    {
        "content": "<p>This is about  <a href=\"https://github.com/opencpn/OpenCPN/issues/3540\">#3540</a>. For reasons desscribed therein the PR moves basically all source files to new locations. This does not affect build procedures, the cmake interface is the same. But it will affect poor developers when trying to find sources which no longer are in the usual locations.</p>\n<p>If you think this is a bad idea this is the time to speak up, preferably  directly in the PR.  </p>\n<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> <br>\n<span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span> <br>\n<span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span> <br>\n<span class=\"user-mention\" data-user-id=\"522729\">@Dan Dickey</span></p>",
        "id": 410273423,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703759054
    },
    {
        "content": "<p>Since mentioned...<br>\nNo comments. As long Git and VS will find what's needed I'm happy. Any small changes I do are based on what's already there so this will not brake \"old habits\" for me. Dave and Pavel may have to reorganize there minds?</p>",
        "id": 410282486,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1703763798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  Thanks for  feedback! </p>\n<p>Pavel and Dave are basically on board, currently working with good input from Pavel</p>",
        "id": 410294856,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703770828
    },
    {
        "content": "<p>Soon merged to my local branch -  but kind of a boring work beforehand...<br>\nA lot whitespaces and new lines at EOF to correct.</p>\n<div class=\"codehilite\"><pre><span></span><code>C:\\Builds\\OCPN\\OpenCPN&gt;git commit -a -m &quot;merge master&quot;\nCMakeLists.txt:1128: trailing whitespace.\n+elseif (QT_ANDROID)\nCMakeLists.txt:1309: trailing whitespace.\n+elseif (QT_ANDROID)\nCMakeLists.txt:2972: trailing whitespace.\n+endif ()\nandroid/androidUTIL.cpp:5640: new blank line at EOF.\ncli/CMakeLists.txt:14: trailing whitespace.\n+      ${PROJECT_SOURCE_DIR}/gui/include\ncli/CMakeLists.txt:87: trailing whitespace.\n+endif ()\ncmake/FindPortaudio.cmake:38: trailing whitespace.\n+# FIXME: Needs indentation...\nfix-includes:29: trailing whitespace.\n+##\ngui/include/gui/color_handler.h:22: new blank line at EOF.\ngui/include/gui/gui_lib.h:35: trailing whitespace.\n+#include &lt;wx/utils.h&gt;\ngui/include/gui/ocpn_app.h:56: trailing whitespace.\n+#endif\ngui/include/gui/ocpn_app.h:81: trailing whitespace.\n+private:\ngui/include/gui/ocpn_app.h:93: trailing whitespace.\n+  int m_exitcode;  ///&lt; by default -2. Otherwise, forces exit(exit_code)\ngui/include/gui/rest_server_gui.h:136: new blank line at EOF.\ngui/include/gui/route_ctx_factory.h:44: trailing whitespace.\n+        [](wxString guid) {\ngui/include/gui/routeman_gui.h:39: trailing whitespace.\n+  bool UpdateProgress();\ngui/src/ConfigMgr.cpp:973: trailing whitespace.\n+\ngui/src/color_handler.cpp:103: new blank line at EOF.\ngui/src/glChartCanvas.cpp:5082: leftover conflict marker\ngui/src/ocpn_app.cpp:2232: new blank line at EOF.\ngui/src/ocpn_print.cpp:153: new blank line at EOF.\ngui/src/options.cpp:2222: trailing whitespace.\n+  pXTEmultplyCheckbox =\ngui/src/options.cpp:2223: trailing whitespace.\n+      new wxCheckBox(itemPanelShip, wxID_ANY,\ngui/src/options.cpp:2227: trailing whitespace.\n+\ngui/src/options.cpp:2229: trailing whitespace.\n+      new wxStaticText(itemPanelShip, wxID_ANY,\ngui/src/options.cpp:2232: trailing whitespace.\n+  dispOwnShipCalcOptionsGrid-&gt;Add(m_pXTEMultiplicator, 1, wxALIGN_RIGHT | wxALL,\ngui/src/options.cpp:2235: trailing whitespace.\n+\ngui/src/options.cpp:7039: trailing whitespace.\n+\ngui/src/peer_client.cpp:239: trailing whitespace.\n+  chunk.size = 0;\ngui/src/peer_client.cpp:271: trailing whitespace.\n+  chunk.size = 0;\ngui/src/peer_client.cpp:323: trailing whitespace.\n+\ngui/src/route_point_gui.cpp:927: new blank line at EOF.\ngui/src/track_gui.cpp:268: new blank line at EOF.\ngui/src/waypointman_gui.cpp:46: trailing whitespace.\n+\ngui/src/waypointman_gui.cpp:729: new blank line at EOF.\nlibs/s52plib/CMakeLists.txt:40: trailing whitespace.\n+  S52PLIB PRIVATE\nlibs/sound/cmake/FindPortaudio.cmake:38: trailing whitespace.\n+# FIXME: Needs indentation...\nmodel/include/model/cli_platform.h:26: new blank line at EOF.\nmodel/include/model/dbus_instance_check.h:29: trailing whitespace.\n+public:\nmodel/include/model/dbus_server.h:34: trailing whitespace.\n+ * \\file\nmodel/include/model/dbus_server.h:36: trailing whitespace.\n+ * DBus interface header file.\nmodel/include/model/dbus_server.h:120: trailing whitespace.\n+  void WaitUntilValid() override;\nmodel/include/model/ipc_api.h:67: trailing whitespace.\n+\nmodel/include/model/ipc_api.h:88: trailing whitespace.\n+  /**\nmodel/include/model/ipc_api.h:120: trailing whitespace.\n+   void Serve() {}\nmodel/include/model/json_event.h:28: new blank line at EOF.\nmodel/include/model/local_api.h:20: trailing whitespace.\n+/**\nmodel/include/model/local_api.h:55: trailing whitespace.\n+  const char* str() { return reason.c_str(); }\nmodel/include/model/local_api.h:80: trailing whitespace.\n+    get_rest_api_endpoint_cb = cb;\nmodel/include/model/local_api.h:93: trailing whitespace.\n+public:\nmodel/include/model/plugin_blacklist.h:34: trailing whitespace.\n+#ifdef major\nmodel/src/base_platform.cpp:944: new blank line at EOF.\nmodel/src/comm_decoder.cpp:496: new blank line at EOF.\nmodel/src/comm_drv_n0183_android_bt.cpp:255: new blank line at EOF.\nmodel/src/comm_drv_n2k.cpp:53: new blank line at EOF.\nmodel/src/comm_drv_n2k_serial.cpp:238: space before tab in indent.\n+       N2kMsg.SetPGN(126993L);\nmodel/src/comm_drv_n2k_serial.cpp:1192: new blank line at EOF.\nmodel/src/comm_drv_signalk.cpp:48: new blank line at EOF.\nmodel/src/comm_drv_signalk_net.cpp:523: new blank line at EOF.\nmodel/src/conn_params.cpp:426: new blank line at EOF.\nmodel/src/cutil.cpp:87: new blank line at EOF.\nmodel/src/dbus_client.cpp:55: trailing whitespace.\n+  bool ok(error == 0 &amp;&amp; g_variant_is_container(result)\nmodel/src/dbus_client.cpp:75: trailing whitespace.\n+  bool ok(error == 0 &amp;&amp; g_variant_is_container(result)\nmodel/src/dbus_client.cpp:95: trailing whitespace.\n+  bool ok(error == 0 &amp;&amp; g_variant_is_container(result)\nmodel/src/dbus_client.cpp:123: trailing whitespace.\n+  bool ok(error == 0 &amp;&amp; g_variant_is_container(result)\nmodel/src/dbus_client.cpp:138: trailing whitespace.\n+  else\nmodel/src/dbus_server.cpp:163: new blank line at EOF.\nmodel/src/instance_handler.cpp:47: trailing whitespace.\n+\nmodel/src/instance_handler.cpp:48: trailing whitespace.\n+  /** Raise current OPenCPN main window to top of GUI application stack. */\nmodel/src/instance_handler.cpp:56: trailing whitespace.\n+class StClient : public wxClient {\nmodel/src/instance_handler.cpp:57: trailing whitespace.\n+public:\nmodel/src/instance_handler.cpp:58: trailing whitespace.\n+  StClient(){};\nmodel/src/instance_handler.cpp:59: trailing whitespace.\n+  wxConnectionBase *OnMakeConnection() { return new StConnection; }\nmodel/src/instance_handler.cpp:60: trailing whitespace.\n+};\nmodel/src/instance_handler.cpp:61: trailing whitespace.\n+\nmodel/src/instance_handler.cpp:76: trailing whitespace.\n+    pSet-&gt;LoadAllGPXObjects(!pSet-&gt;IsOpenCPN(), wpt_dups, true);\nmodel/src/instance_handler.cpp:77: trailing whitespace.\n+    update_route_mgr_dlg();\nmodel/src/instance_handler.cpp:104: trailing whitespace.\n+\nmodel/src/ipc_api.cpp:52: trailing whitespace.\n+}\nmodel/src/ipc_api.cpp:60: trailing whitespace.\n+  }\nmodel/src/ipc_factories.cpp:34: trailing whitespace.\n+#endif\nmodel/src/ipc_factories.cpp:50: trailing whitespace.\n+    return std::unique_ptr&lt;LocalClientApi&gt;(new IpcClient);\nmodel/src/ipc_factories.cpp:57: trailing whitespace.\n+\nmodel/src/mDNS_query.cpp:499: new blank line at EOF.\nmodel/src/mDNS_service.cpp:406: space before tab in indent.\n+       // A/AAAA records mapping &quot;&lt;hostname&gt;.local.&quot; to IPv4/IPv6 addresses\nmodel/src/mDNS_service.cpp:422: space before tab in indent.\n+       // Add two test TXT records for our service instance name, will be coalesced into\nmodel/src/mDNS_service.cpp:537: new blank line at EOF.\nmodel/src/macutils.c:250: trailing whitespace.\n+ * See https://developer.apple.com/documentation/apple-silicon/about-the-rosetta-translation-environment#Determine-Whether-Your-App-Is-Running-as-a-Translated-Binary\nmodel/src/macutils.c:255: trailing whitespace.\n+   if (sysctlbyname(&quot;sysctl.proc_translated&quot;, &amp;ret, &amp;size, NULL, 0) == -1)\nmodel/src/macutils.c:267: trailing whitespace.\n+\nmodel/src/macutils.c:268: trailing whitespace.\n+    if (sysctlbyname(&quot;hw.optional.arm64&quot;, &amp;ret, &amp;size, NULL, 0) == -1) {\nmodel/src/navutil_base.cpp:805: new blank line at EOF.\nmodel/src/own_ship.cpp:28: trailing whitespace.\n+double gLat;\nmodel/src/own_ship.cpp:35: new blank line at EOF.\nmodel/src/pincode.cpp:35: trailing whitespace.\n+  unsigned long long compat_val = engine();\nmodel/src/routeman.cpp:460: trailing whitespace.\n+       if (m_bArrival) b_arrived = true;\nmodel/src/std_instance_chk.cpp:41: trailing whitespace.\n+static int GetLockfilePid(const std::string&amp; path){\nmodel/src/std_instance_chk.cpp:47: trailing whitespace.\n+  return  pid;\nmodel/src/std_instance_chk.cpp:49: trailing whitespace.\n+\nmodel/src/std_instance_chk.cpp:79: trailing whitespace.\n+  }\nresources/bitmaps/13xX_svg_src/create_all_13xX.sh:43: new blank line at EOF.\nresources/bitmaps/16x16_svg_src/create_all_16x16.sh:37: new blank line at EOF.\nresources/bitmaps/28x28_svg_src/create_all_28x28.sh:37: new blank line at EOF.\nresources/bitmaps/32x32_svg_src/ribbon/create_all_32x32.sh:37: new blank line at EOF.\nresources/bitmaps/other_svg_src/create_opencpn_main_icon.sh:52: new blank line at EOF.\nresources/bitmaps/other_svg_src/create_ship.sh:34: new blank line at EOF.\nresources/bitmaps/styles.xml:2039: new blank line at EOF.\ns57/CMakeLists.txt:17: trailing whitespace.\n+  HDRS\ns57/CMakeLists.txt:25: trailing whitespace.\n+)\ns57/CMakeLists.txt:73: trailing whitespace.\n+    ${CMAKE_SOURCE_DIR}/gui/include/gui\ntest/CMakeLists.txt:161: trailing whitespace.\n+  target_include_directories(dbus_tests PRIVATE\ntest/CMakeLists.txt:206: trailing whitespace.\n+gtest_add_tests(TARGET tests)\ntest/CMakeLists.txt:217: trailing whitespace.\n+target_include_directories(cli-server PRIVATE\ntest/CMakeLists.txt:226: trailing whitespace.\n+target_include_directories(ipc-client PRIVATE\ntest/CMakeLists.txt:245: trailing whitespace.\n+target_include_directories(wx-instance PRIVATE\ntest/CMakeLists.txt:267: trailing whitespace.\n+  target_include_directories(std-instance PRIVATE\n</code></pre></div>",
        "id": 410403382,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1703837331
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span>   Builds on Win10 VS2022 when excluded \"tests\"<br>\nLink error:</p>\n<div class=\"codehilite\"><pre><span></span><code>18&gt;LINK : fatal error LNK1181: cannot open input file &#39;C:\\Builds\\OCPN\\OpenCPN\\cache\\buildwin\\iphlpapi.lib&#39;\n18&gt;Done building project &quot;tests.vcxproj&quot; -- FAILED.\n</code></pre></div>",
        "id": 410410592,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1703842462
    },
    {
        "content": "<p>hm... the CI build works with tests, it also runs them. So this is about the build environment</p>",
        "id": 410412802,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703843715
    },
    {
        "content": "<p>Yes, the trailing whitespace is a pain. time for a  new round of cmake-format. Putting it  on my list.</p>",
        "id": 410412965,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703843813
    },
    {
        "content": "<p>will need to look into that link error later, but out of time right now.</p>",
        "id": 410430226,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703854852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  About the missing library: it seems that it is downloaded by win_deps.bat. Can you make a new try after running this?</p>\n<p>In hindsight, having this in win_deps.batr is not ideal. We should really try to hancle this in a mre generic way.</p>",
        "id": 410454628,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703870150
    },
    {
        "content": "<p>Yes, there's a link in win_deps.bat so no problem. Wonder why the file disappeared during the merge of  this master code? <br>\nThanks for the hint.</p>",
        "id": 410465836,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1703876024
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  I basically never merge anything into master, it's a bad idea since your master will differ from upstream/master (different history).</p>\n<p>If you have local changes you want to keep there are two ways to handle it instead, to rebase or get a fresh branch.</p>\n<p>Doing a rebase  goes like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>    $ git remote update upstream\n    $ git rebase upstream/master\n</code></pre></div>\n<p>If there are conflicts you will need to handle them, much the same as when doing a merge. When completeted you will have your own changes on top on a verbatim copy of upstream/master -- this is what you want. One added benefit is that in case of troubles there is <code>git rebase --abort</code> which resets everything.</p>\n<p>A complete, verbatim copy of master :</p>\n<div class=\"codehilite\"><pre><span></span><code>    $ git remote update upstream\n    $ git checkout some-branch-but-not-master\n    $  git fetch -f upstream master:master\n</code></pre></div>\n<p>This will nuke whatever changes you have locally, such should be saved in other branches. Your master will be an exact copy of upstream/master, something a merge often (but not always) isn't.</p>",
        "id": 410523366,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703923954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> I must have expressed it badly.<br>\nMy master is never touched. Not even with build dependencies. I use master to pull from Github and then merge it into a \"myocpn\" branch where build environment lives and where I have some small own \"hacks*\". <br>\nIf I make some patches to push I use to make a branch from myocpn for trials and commits. When ready I make a branch from master,  cherry-pick the commit(s) and push upstream after a rebase. Use to be clean.</p>\n<p>*)One present hack is to immediately  restore a TCP N0183 connection after a Win suspend but that's another story hopefully on the table in a near future?</p>",
        "id": 410532583,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1703931924
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/HEADS.20UP.3A.20All.20source.20files.20being.20moved/near/410454628\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"522486\">Håkan Svensson</span>  About the missing library: it seems that it is downloaded by win_deps.bat. Can you make a new try after running this?</p>\n<p>In hindsight, having this in win_deps.batr is not ideal. We should really try to hancle this in a mre generic way.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span>  Will this dependency stay in win_deps.bat?</p>",
        "id": 410539417,
        "sender_full_name": "Dan Dickey",
        "timestamp": 1703936554
    },
    {
        "content": "<p>IMHO we need to find a better, more generic way to handle this since win_deps.bat is only used in the appveyor.bat workflow, right?</p>",
        "id": 410539864,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703936951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522729\">@Dan Dickey</span>  ^</p>",
        "id": 410540112,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703937168
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/HEADS.20UP.3A.20All.20source.20files.20being.20moved/near/410539864\">said</a>:</p>\n<blockquote>\n<p>IMHO we need to find a better, more generic way to handle this since win_deps.bat is only used in the appveyor.bat workflow, right?</p>\n</blockquote>\n<p>Yes, win_deps.bat doesn't work for local builds due to its assumptions about installed tools. But we can use the same dependencies for local building.  I just need to know if a new dependency is added or changed so I can fix the local build script to get the new/changed dependencies.</p>",
        "id": 410550291,
        "sender_full_name": "Dan Dickey",
        "timestamp": 1703947450
    },
    {
        "content": "<p>yes, the dependency will stay. </p>\n<p>We should really first try to find it using cmake. It seems that many Windows system actually have this available anyway. Havn't digged into where it originates in these cases, though.</p>\n<p><a href=\"https://github.com/opencpn/OpenCPN/issues/3540\">#3540</a> was a beast,  this is one of  the loose ends left.</p>",
        "id": 410550482,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1703947669
    },
    {
        "content": "<p>The file should be found here on most systems:</p>\n<p>\"%WindowsSdkDir%\\lib\\%WindowsSdkLibVersion%\\um\\x86\\iphlpapi.lib\"</p>\n<p>If that is where it is on the CI build system then maybe we could just add \"%WindowsSdkDir%\\lib\\%WindowsSdkLibVersion%\\um\\x86\\\" to the lib search path in cmakelists.txt.</p>",
        "id": 410623390,
        "sender_full_name": "Dan Dickey",
        "timestamp": 1704018260
    },
    {
        "content": "<p>The header is here:</p>\n<p>\"%WindowSdkDir%\\Include\\%WindowsSdkLibVersion%\\um\"</p>",
        "id": 410623573,
        "sender_full_name": "Dan Dickey",
        "timestamp": 1704018455
    },
    {
        "content": "<p>Correct! On my W10:</p>\n<div class=\"codehilite\"><pre><span></span><code>C:\\Builds\\OCPN\\OpenCPN&gt;cd %WindowsSdkDir%\\lib\\%WindowsSdkLibVersion%\\um\\x86\\\n\nC:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x86&gt;dir *phlpapi.lib\n....\n2023-09-30  00:58            79 930 iphlpapi.lib\n               1 File(s)         79 930 bytes\n               0 Dir(s)  53 438 164 992 bytes free\n</code></pre></div>",
        "id": 410625414,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1704020407
    },
    {
        "content": "<p>We really need to  use  cmake here: <code>find_library()</code> and <code>find_path()</code>. But first, the new year is looming and I am the host. Busy in the kitchen...</p>",
        "id": 410629228,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1704024299
    },
    {
        "content": "<p>I don't see how cmake can help here.  It will need a hint from the environment variable %WindowsSkdDir% at least which must be present for cmake to find it.  And if it is present then we already know where is the library. If that variable is not present, cmake will never find the library except by brute force search of the entire file system which seems wrong.</p>",
        "id": 410634070,
        "sender_full_name": "Dan Dickey",
        "timestamp": 1704029294
    }
]