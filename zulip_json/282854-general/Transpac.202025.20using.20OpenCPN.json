[
    {
        "content": "<p>I have completed the Transpac 2025 using OpenCPN as one of the navigation systems aboard our Beneteau First 40. It was an absolute blast with lots of challenges and great memories, sailing from California to Hawaii in demanding offshore conditions. I'll provide detailed feedback on real-world offshore usage of OpenCPN, from a practical racing perspective.</p>\n<h2>Context and Competition</h2>\n<p>The professional and semi-professional boats were predominantly using commercial navigation software (Adrena and Expedition). Some of the skippers and navigators are world-class professionals with extensive offshore racing experience, with most crew members having highly specialized roles. We were not in that category, but we had tremendous fun nonetheless and proved that OpenCPN can be used effectively for offshore racing. </p>\n<h2>Overall Assessment</h2>\n<p>The combination of weather analysis, performance monitoring, and traditional navigation created a robust offshore sailing platform. OpenCPN worked well with few problems throughout most of the race, seamlessly integrating with our B&amp;G electronics and providing great navigation capabilities. The system performed well until laptop hardware failed due to seawater ingress during heavy weather - a scenario that highlighted both OpenCPN's strengths and areas for improvement.</p>\n<p>During this real-world offshore race, I have identified specific enhancements that would significantly improve reliability and usability, particularly for offshore racing applications. The feedback comes from actual usage in challenging conditions with multiple crew members of varying technical expertise.</p>",
        "id": 530213133,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753214206
    },
    {
        "content": "<h2>System Configuration</h2>\n<ul>\n<li><strong>Vessel</strong>: Beneteau First 40</li>\n<li><strong>Primary Setup</strong>: Ubuntu laptop with OpenCPN timeline branch + comprehensive plugin suite</li>\n<li><strong>Backup Setup</strong>: Windows laptop with OpenCPN 5.11.3 (post-failure recovery)</li>\n<li><strong>Connectivity</strong>: Starlink for GRIB downloads and data sync</li>\n<li><strong>Hardware Integration</strong>:<ul>\n<li>B&amp;G Zeus 3S chart plotter</li>\n<li>B&amp;G Triton deck displays</li>\n<li>Yacht Devices YDNU-02 USB NMEA gateway</li>\n<li>OpenCPN as navigation computer feeding B&amp;G system</li>\n<li>Ocean Signal MOB-1 devices configured in crew PFDs. Configure Ocean Signal MOB-1 MMSI numbers with crew names in Ships â†’ MMSI Properties for crew safety identification</li>\n</ul>\n</li>\n<li><strong>Route</strong>: Standard Transpac course (California to Hawaii)</li>\n</ul>\n<h3>Plugin Configuration</h3>\n<ul>\n<li><strong>VDR</strong>: Continuous voyage data recording</li>\n<li><strong>Weather Routing</strong>: Primary routing calculations</li>\n<li><strong>WMM</strong>: Magnetic variation calculations</li>\n<li><strong>Dashboard</strong>: Polar performance monitoring and vessel parameters</li>\n<li><strong>Weather Fax</strong>: Weather system analysis and forecasting</li>\n<li><strong>OCPN Draw</strong>: Weather route what-if scenarios and exclusion zones for weather routing (e.g. south or north)</li>\n<li><strong>Tactics</strong>: Layline calculations and tactical sailing data</li>\n<li><strong>Celestial Navigation</strong>: Sextant-based position verification</li>\n<li><strong>Plots</strong>: Performance analysis and data visualization</li>\n</ul>",
        "id": 530216495,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753215584
    },
    {
        "content": "<h2>Weather Routing Process</h2>\n<p>We used the following process multiple times per day:</p>\n<ol>\n<li>Download GRIBs via Starlink</li>\n<li>Analyze weather data in OpenCPN and Weather Fax plugin</li>\n<li>Optionally create exclusion zones using OCPN Draw for zone avoidance</li>\n<li>Create multiple weather routing scenarios using weather routing plugin with tactical considerations</li>\n<li>Save multiple routes for comparison and analysis</li>\n<li>Use timeline widget to visualize weather evolution and route performance over time</li>\n<li>Manual route editing and optimization based on timeline analysis</li>\n<li>Route activation with manual waypoint selection</li>\n<li>Monitor performance via Dashboard plugin (polar data)</li>\n<li>Use Tactics plugin for real-time layline calculations</li>\n<li>Configure navigation data output (XTE, DTW, bearing) via YDNU-02 gateway</li>\n<li>B&amp;G Zeus 3S and Triton displays receive OpenCPN navigation data as primary source</li>\n<li>Crew uses navigation data on Triton display and verbal guidelines from the navigator.</li>\n</ol>",
        "id": 530217723,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753216160
    },
    {
        "content": "<p>I monitored the polar performance via Dashboard plugin (performance of actual sailing versus polar data). Then I used the actual polar performance as a feedback loop to adjust configuration parameters in the weather routing.  For example, if I noticed for the past 3 hours the polar performance under symmetric spinnaker was 108%, I would use this to recalculate isochrons with these new polar settings in the weather routing plugin.</p>\n<p>Related to this, it would be useful to enhance OpenCPN as follows:</p>\n<ol>\n<li>Ability to easily assign who is at the helm and the sail plan.</li>\n<li>Save event log with person at the helm and sail plan. This could be as part of the VDR plugin (or perhaps logbook plugin). I tried to use the logbook plugin, but it causes too many crashes and it's too complicate to assign people</li>\n<li>The tactics plugin could be improved to better show the polar performance: actual polar performance since last change of person at the helm, or last maneuver or last sail plan change. And average polar performance for the past X seconds/Y minutes. In addition, it would be good to show the polar performance for a given sail plan. Ie. in the weather routing plugin, it's possible to configure multiple polars (one per sail plan), but in the tactics plugin, you can only load one polar at a time.</li>\n<li>In the weather routing plugin, it should be possible to:<br>\n   a. specify the performance rating per sail plan. We were not doing great under jib, however our performance was pretty good under symmetric spinnaker with waves.<br>\n   b. show the actual performance versus the plan.</li>\n</ol>",
        "id": 530237207,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753225582
    },
    {
        "content": "<p>The ECMWF and GFS forecasts were fairly accurate. In general, I noticed the wind speed was typically a few knots higher than the GFS forecast.<br>\nThe wind direction of the forecast versus real conditions was confusing. Our B&amp;G instruments are all configured to provide magnetic angles, whether it's COG, HEADING or TWD. It's a configuration setting that we intentionally selected. I think it's possible to configure the B&amp;G to use geographic north, but that's not what we wanted to.</p>\n<p>On the other hand, in OpenCPN it's not always clear whether information is provided with geographic north or magnetic north, especially for the wind direction (TWD) in the GRIB plugin and the weather routing plugin. IMHO, there should be a clear visual indication to show whether it's geo or magnetic. The user should be able to configure such that OpenCPN data matches on-board instruments. I had to manually apply a correction.</p>\n<p>In addition to geo versus magnetic north, the real wind is typically not exactly the same as the forecast. It would be useful to configure the weather routing plugin to indicate the wind has shifted X degrees compared to the forecast, and the routing should take that shift into consideration.</p>\n<p>Another point is that some segments had +/-20 degree wind shifts. I.e. we could reliably and consistently observe that  wind was at a constant TWD for 45 minutes, then suddenly shifting 20 degrees. Then that pattern would repeat itself multiple times. This sort of observation could potentially be used in the weather routing configuration.</p>",
        "id": 530238145,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753226157
    },
    {
        "content": "<h2>Improvement Ideas</h2>\n<h3>OpenCPN core</h3>\n<ul>\n<li>Integrate timeline widget into core OpenCPN - essential for user-friendly weather analysis, route analysis and what-if scenarios. Proved invaluable for weather analysis - crew found it intuitive vs. traditional GRIB time controls</li>\n<li>Implement timeline-integrated route position projection in Route &amp; Mark Manager. Multiple saved weather routes enabled strategic analysis but lack timeline integration for position projection.</li>\n<li>Implement MOB device test procedure for MMSI/name verification</li>\n<li>In Options -&gt; Connections, add NMEA sentence descriptions and preset configurations for easier setup. Navigation calculations immediately reflected on Triton deck displays - route calculation to bearing display was instant and reliable</li>\n<li>Improve CPA alert filtering to reduce false positives</li>\n<li>Implement automated backup system (e.g. to Google Drive), and one-click restore on a different system. Ability to save configuration and logs, including plugin data.</li>\n</ul>\n<h3>Tactics</h3>\n<ul>\n<li>Implement configurable duration averaging for plugin laylines</li>\n<li>Implement configurable duration averaging for polar performance</li>\n<li>Selectable timeframes: 1 second, 10 seconds, 1 minute, 10 minutes</li>\n<li>Calculate average heading over selected duration</li>\n<li>Generate stable laylines based on averaged heading and TWD</li>\n<li>Reduce layline fluctuation caused by wave-induced heading changes</li>\n</ul>\n<h3>Weather Routing plugin</h3>\n<ul>\n<li>Cross-platform weather plugin stability - routing did not work on Windows</li>\n<li>Enhance integration between OCPN Draw and Weather Routing plugins</li>\n<li>Improved current display (show opposing currents as negative values)</li>\n<li>Weather-based sail selection (cloud cover/rain thresholds)</li>\n<li>Night sailing restrictions (no sail changes/gybes)</li>\n<li>Sail plan constraints (max TWS/swell per sail configuration)</li>\n<li>Real-time polar performance vs. routing predictions</li>\n</ul>",
        "id": 530239260,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753226990
    },
    {
        "content": "<h3>Hardware Failure Recovery</h3>\n<ul>\n<li><strong>Problem</strong>: Primary Ubuntu laptop failed after seawater ingress during heavy weather</li>\n<li><strong>Impact</strong>: Lost all routing data, VDR logs, custom configurations, and NMEA gateway setup</li>\n<li><strong>Windows Migration</strong>: Installed OpenCPN 5.11.3 - weather plugin failed to complete routes</li>\n<li><strong>Timeline Widget Loss</strong>: Backup system lacked timeline branch - crew found GRIB time navigation confusing without intuitive timeline interface</li>\n<li><strong>Integration Loss</strong>: Had to reconfigure entire YDNU-02 gateway and B&amp;G navigation data flow but YDNU-02 gateway integration did not work on Windows.</li>\n<li><strong>Lesson</strong>: Need robust and simple backup/restore procedures</li>\n</ul>\n<p>Backup to cloud when possible (e.g. with Starlink) with delta backup to optimize bandwidth usage. Our starlink was consuming about 25W which we thought was too much given our main generator was a Watt &amp; Sea. So we only connected the Starlink as needed. OpenCPN should ideally detect when there is an internet connection and backup if network connection is available.<br>\nAnother procedure could be to backup locally to a different system (e.g. different laptop).</p>\n<ul>\n<li>Auto-backup VDR files, routes, configurations, NMEA gateway settings, and MMSI properties</li>\n<li>Include OpenCPN connection profiles and output configurations</li>\n<li>Preserve MOB device configurations and crew safety settings</li>\n<li>Enable seamless restoration on different hardware/OS</li>\n<li>Critical for equipment failure scenarios at sea</li>\n</ul>",
        "id": 530239785,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753227420
    },
    {
        "content": "<h2>GRIB plugin improvements</h2>\n<ul>\n<li>Automated multi-source GRIB acquisition</li>\n<li>Make it easier to download same set of GRIB files every 6 hours, e.g. ECMWF, GFS, RTOFS</li>\n<li>Multi-resolution support (global low-res + regional high-res)</li>\n<li>Configurable download schedules</li>\n</ul>",
        "id": 530240171,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753227731
    },
    {
        "content": "<ul>\n<li>\n<p>GRIB and Weather routing Enhancements</p>\n</li>\n<li>\n<p>Ability to set max TWS/swell height per sail plan. In our case, we found it was very challenging to sail the assymmetric spinnaker when the TWS &gt; 22 knots under the specific wave conditions.</p>\n</li>\n<li>Import more wave parameters in GRIB plugin and weather routing plugin.</li>\n<li>Enhance WR plugin to take wave into consideration. I.e. under broad reach, surfing, vs going upwind.</li>\n<li>Ability to specify disallowed sail plan changes under specific circumstances, e.g. night time and TWS &gt; 18 knots and Cloud cover &gt; 90%</li>\n<li>Ability to use cloud cover or rain as constraint in WR routing.</li>\n<li>Set leeway in WR plugin</li>\n<li>Set min/max TWA angle per sail plan. For example, the routing was suggesting to use the assymetric with a fairly low TWA, but that was really hard to sail with the swell.</li>\n<li>Show the X component of the current on the COG vector</li>\n<li>Ability to set polar performance per sail plan.</li>\n<li>Show weather routing table for alternate routes</li>\n<li>Show actual polar performance and compare to routing forecast. Suggest new polar configuration based on actual observsations.</li>\n</ul>\n<h1>OpenCPN core</h1>\n<ul>\n<li>Assuming the timeline widget is enabled, highlight the boat position on a track or route for the currently selected time and tracks/routes in OpenCPN core \"route and mark\" manager.</li>\n<li>Show horizontal weather table above the timeline. Show color-coded TWS and TWD.</li>\n<li>In \"Show horizontal weather table above the timeline\", ability to show data from multiple GRIBs, e.g., show GFS and ECMWF</li>\n</ul>",
        "id": 530242094,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753229245
    },
    {
        "content": "<p>I'll take these notes in more details and submit GitHub issues.</p>",
        "id": 530243225,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753230140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span>  , <span class=\"user-mention\" data-user-id=\"399865\">@Rick Gleason</span> , <span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span></p>",
        "id": 530408199,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1753295095
    },
    {
        "content": "<p>Sebastien, I had no idea that you were testing and learning O in a real environment. <br>\nI noticed your interest in Waves a huge factor in racing effectively and anticipating the proper rudder movements. Some years ago there was a lot of discussion how to improve pypilot performance with the use of special lidar sensors to identify and anticipate the action of waves. We were told that waves are transparent to lidar. Since then, after talking with a Belgian engineer involved with Lidar, that there are ways to adjust lidar frequency etc so that water is not so transparent. Since this development has not happened yet, Bare Boat Necessities , <a href=\"https://github.com/mgrouch?tab=stars\">mgrouch (Mikkail Grushinskiy)</a> has developed some other techniques to forecast \"heaving\"   see BBN Boat Heave Sensor using IMU  <a href=\"https://github.com/bareboat-necessities/bbn-wave-period-esp32\">bbn-wave-period-esp32</a>  He has been working on it for quite awhile.</p>\n<p>Also <a href=\"https://github.com/pypilot/pypilot/issues/168\">https://github.com/pypilot/pypilot/issues/168</a></p>",
        "id": 530673392,
        "sender_full_name": "Rick Gleason",
        "timestamp": 1753405610
    }
]