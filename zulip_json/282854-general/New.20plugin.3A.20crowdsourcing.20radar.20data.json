[
    {
        "content": "<p>I'm trying to build a new plugin:</p>\n<p><a href=\"https://github.com/KAHU-radar/crowdsource_pi\">https://github.com/KAHU-radar/crowdsource_pi</a><br>\n<a href=\"https://cloudsmith.io/~kahu/repos/crowdsource_pi-beta/packages/\">https://cloudsmith.io/~kahu/repos/crowdsource_pi-beta/packages/</a></p>\n<p>It works fine on my linux box, but when installing the macos plugin into opencpn on a mac, it says that the plugin failed to initialize. How do you find out what's wrong? On linux when I had the same problem earlier, I used ldd to find unbound symbols and figure out what lib didn't get statically linked or something...</p>\n<p>Could anyone w mac dev exp. help me out?</p>",
        "id": 492800809,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736450696
    },
    {
        "content": "<p>The <code>ldd</code> equivalent on macOS is <code>otool -L</code>. The reason for the plugin not being loaded is in the logfile (<code>~/Library/Logs/opencpn.log</code> on macOS)</p>",
        "id": 492838321,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736464775
    },
    {
        "content": "<p>I don't know what is it supposed to do, but <a href=\"https://cloudsmith.io/~kahu/repos/crowdsource_pi-beta/packages/detail/raw/crowdsource_pi-0.1.162.0-darwin-wx32-arm64-x86_64-12.6.3-macos-tarball/0.1.162.0+974.a1bd264/#files\">it</a> imports and loads fine for me on an Apple Silicon Macbook.</p>",
        "id": 492839193,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736465181
    },
    {
        "content": "<p>What will be a problem is you don't modify the RPATH correctly and leave <code>/usr/local/lib</code> there (as in <code>/usr/local/lib/libwx_baseu-3.2.dylib</code>), while it has to be changed to <code>@executable_path/../Frameworks/</code> (as in eg. <code>@executable_path/../Frameworks//libwx_baseu-3.2.dylib</code>) using <code>install_name_tool</code> during the packaging of the tarball.<br>\nI myself do it using this script: <a href=\"https://github.com/nohal/dashboardsk_pi/blob/main/cmake/fix-macos-libs.sh\">https://github.com/nohal/dashboardsk_pi/blob/main/cmake/fix-macos-libs.sh</a> (Invoked from <a href=\"https://github.com/nohal/dashboardsk_pi/blob/main/cmake/PluginInstall.cmake#L64\">https://github.com/nohal/dashboardsk_pi/blob/main/cmake/PluginInstall.cmake#L64</a>)</p>",
        "id": 492840563,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736465793
    },
    {
        "content": "<p>Thanks!</p>\n<p>Re. RPATH: Is this a bug / limitation in TestPlugin? I based my plugin on that... I kinda assumed that all platforms would build correctly with the existing testplugin code, and that all my build problems / broken output was due to the things I added (a dependency on some external libraries statically linked in, like apache avro)</p>\n<p>Will try otool -L and check the log. I used the universal binary plugin build, on an apple silicon mac.</p>\n<p>It's supposed to let you specify a server name/port/apikey, and then it uploads any $RATTM radar ARPA targets it sees to that server. It caches stuff locally in an sqlite database in case it doesn't have an internet connection for the moment.</p>\n<p>There's a link next to the API key field to a functional, but so far very very limited website where you can upload this data and then view it, and there's a super minimal server in the git repo for the plugin.</p>",
        "id": 492842650,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736466756
    },
    {
        "content": "<p>It's all pretty early stuff - beta level stuff strung together with ducttape kinda :P</p>",
        "id": 492842749,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736466817
    },
    {
        "content": "<p>I have no idea how TestPlugin works and don't use it myself, but am pretty sure it is broken in this respect as Dave was recently having the same problem while fixing weatherfax (which I think is based on it).</p>",
        "id": 492842997,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736466923
    },
    {
        "content": "<p>I suppose the plugin should have a preferences dialog, but at least on macOS it is not working (the preferences button is not enabled)</p>",
        "id": 492843425,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736467110
    },
    {
        "content": "<p>Would have to dig deeper into it as the obvious <code>WANTS_PREFEENCES</code> seems to be there</p>",
        "id": 492843518,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736467159
    },
    {
        "content": "<p>Oh :S Then I'll try your solution and see if that works on my code! Do you have a mac locally you test on / dev on? I'm on linux, and got to borrow a mac for 5mins for the test... How do people generally test stuff (in the full gui, not unit tests) on all these platforms?</p>",
        "id": 492843572,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736467184
    },
    {
        "content": "<p>Oh, the preferences button doesn't show up on my plugin? On linux, it seems to (sometimes) only not be grayed out after you close the settings dialog and reopen it again after enabling the plugin....</p>",
        "id": 492843819,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736467264
    },
    {
        "content": "<p>Could you try that and see if it works that way?</p>\n<p>My plugin doesn't have any GUI apart from the settings dialog as it's not meant to be interacted with during normal operation - it's just supposed to send stuff to shore and not bother you.</p>",
        "id": 492844072,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736467326
    },
    {
        "content": "<p>Yes, I have an M1 Air here for testing this stuff. And a KVM VM running some old x86_64 macOS provisioned using <a href=\"https://github.com/kholia/OSX-KVM.git\">https://github.com/kholia/OSX-KVM.git</a></p>",
        "id": 492844243,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736467420
    },
    {
        "content": "<p>Wow, had no idea you could run a virtual hackintosh. That's super useful, will definitely have a go at that for testing!</p>",
        "id": 492844586,
        "sender_full_name": "Egil Möller",
        "timestamp": 1736467570
    },
    {
        "content": "<p>There is also more bizarre stuff that supposedly also works: <a href=\"https://github.com/sickcodes/Docker-OSX\">https://github.com/sickcodes/Docker-OSX</a></p>",
        "id": 492844702,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1736467629
    }
]