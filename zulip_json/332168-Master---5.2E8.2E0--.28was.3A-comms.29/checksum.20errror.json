[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  Argh, checksum errors. I've had that before but forgot why that was. Will investigate.</p>",
        "id": 348487491,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681225362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> and <span class=\"user-mention\" data-user-id=\"399559\">@Mike Rossiter</span> I've forked SD and will generate a PR for the wx3.2.2 changes including removal/cleanup of the WX_ABI stuff.</p>",
        "id": 348487865,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681225425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"493038\">@Kees Verruijt</span> <br>\n forgot why that was....<br>\nFresh build will usually correct this.  Might need a version bump.</p>",
        "id": 348488947,
        "sender_full_name": "Dave Register",
        "timestamp": 1681225618
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"517002\">Dave Register</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/wx3.2E2.2E2.20compatibility/near/348488947\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"493038\">Kees Verruijt</span> <br>\n forgot why that was....<br>\nFresh build will usually correct this.  Might need a version bump.</p>\n</blockquote>\n<p>Interestingly, it's only the Darwin build where the checksum is wrong. The others match up fine when I download them manually. Can you download the beta on your pi?</p>",
        "id": 348498241,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681227651
    },
    {
        "content": "<p>Sorry, not only the Darwin, the linux Debian-wx32;11;x86_64 as well. Even stranger ... I will add a check and log to the ship driver template files.</p>",
        "id": 348504008,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681228995
    },
    {
        "content": "<p>5 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"332168\" href=\"/#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/wx3.2E2.2E2.20compatibility\">#Master - 5.8.0  (was: comms) &gt; wx3.2.2 compatibility</a> by <span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span>.</p>",
        "id": 348512783,
        "sender_full_name": "Notification Bot",
        "timestamp": 1681231253
    },
    {
        "content": "<p>Something fishy going on here. I cannot reproduce this in a local build of shipdriver. Why would radar_pi be different?</p>",
        "id": 348513040,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681231312
    },
    {
        "content": "<p>Nor is for example the darwin-wx32 broken when checking my cloudsmith repo -- the metadata checksum is OK.</p>",
        "id": 348514350,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681231602
    },
    {
        "content": "<p>... and same for the shipdriver wx32/x86_64 build when looking at what's uploaded to cloudsmith. Something differs, but what?</p>",
        "id": 348515017,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681231764
    },
    {
        "content": "<p>BTW: how do you verify things?</p>",
        "id": 348515215,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681231815
    },
    {
        "content": "<p>I just run <code>sha256sum &lt;tarball&gt;</code> and compares to the XML metadata.</p>",
        "id": 348515364,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681231863
    },
    {
        "content": "<p>Same here. I am now adding the same check to <a href=\"http://upload.sh.in\">upload.sh.in</a> so that it checks everywhere we build a Linux-like OS.</p>",
        "id": 348521602,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681233533
    },
    {
        "content": "<p>There are now pull requests both for SD (with a number of fixes) and O plugins (for radar_pi v5.5.0-beta3).<br>\nSD changes:</p>\n<ul>\n<li>Build debian-wx32 targets using wxWidgets 3.2.2.1 instead of wx 3.2.1.</li>\n<li>Check that targets with wx32 or flatpak in the name are built using wx 3.2 (except windows).</li>\n<li>Check that the SHA checksum of the tar.gz file matches and log it (except windows). </li>\n<li>Build flatpak builds with 1 parallel, as I am seeing spurious make errors at 2.</li>\n<li>Switch Debian builds using <a href=\"http://circleci-build-debian.sh\">circleci-build-debian.sh</a> to Release (from RelWithDebInfo).</li>\n</ul>",
        "id": 348549821,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681242280
    },
    {
        "content": "<p>OK, interesting, the PR request failed -- on an error I thought I already fixed. Hang on.</p>",
        "id": 348550207,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681242443
    },
    {
        "content": "<p>Thanks for the PR. I have made a quick review, the remarks are in the PR. </p>\n<p>I did  one review remark for each commit , but the relation remark-commit is not obvious. Hopefully you can figure it out, let me know otherwise.</p>",
        "id": 348554831,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681244252
    },
    {
        "content": "<p>What is the new cloud smith link?</p>",
        "id": 348558517,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681245690
    },
    {
        "content": "<p>alec-leamas/wxwidgets-32</p>",
        "id": 348558791,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681245788
    },
    {
        "content": "<p>OK. I am checking using radar_pi now. I've split the checks off into <code>verify-result.sh</code> that is then executed from the various circle*.sh scripts, right after <code>make</code>. Is that something that would agreeable in principle? (It can't be done in cmake, as the SHA needs to be done in a different way than CMake, as that is exactly what is not being generated correctly all of the time.)</p>",
        "id": 348559506,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681246086
    },
    {
        "content": "<p>A separate script is of course better. But I still would consider this as a temporary debug setup, nothing we should live with permanently.</p>\n<p>Have you a link to a build log which generates a faulty checksum?</p>",
        "id": 348559931,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681246274
    },
    {
        "content": "<p>As to the <code>Release</code> vs <code>RelWithDbgInfo</code> -- well, it wasn't being stripped, so that is a real bug. Also it makes <code>circleci-build-debian.sh</code> different from all others . How about doing something like <code>${CMAKE_LOCAL_TARGET:-Release}</code> everywhere, which would allow you to override _all_ platforms from your <code>.local/config.rc</code> ?</p>",
        "id": 348559940,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681246278
    },
    {
        "content": "<p>I think the basic logic actually is sound. We should file a bug if a library isn't stripped, and fix it.</p>",
        "id": 348560154,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681246360
    },
    {
        "content": "<p>Same thing here: have you got a link to a build log which generates a non-stripped library file?</p>",
        "id": 348560292,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681246415
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/checksum.20errror/near/348559931\">said</a>:</p>\n<blockquote>\n<p>A separate script is of course better. But I still would consider this as a temporary debug setup, nothing we should live with permanently.</p>\n<p>Have you a link to a build log which generates a faulty checksum?</p>\n</blockquote>\n<p>The existing logs don't log the sha256 that they generated so there is nothing to check.</p>",
        "id": 348560458,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681246487
    },
    {
        "content": "<p>But, I could re-run -the build....</p>",
        "id": 348560533,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681246518
    },
    {
        "content": "<p><a href=\"https://app.circleci.com/pipelines/github/opencpn-radar-pi/radar_pi/360/workflows/0cd324b0-e546-4d38-9b3e-a738bdc80bf3/jobs/2548\">https://app.circleci.com/pipelines/github/opencpn-radar-pi/radar_pi/360/workflows/0cd324b0-e546-4d38-9b3e-a738bdc80bf3/jobs/2548</a></p>",
        "id": 348560579,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681246539
    },
    {
        "content": "<p>has both flaws.</p>",
        "id": 348560838,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681246639
    },
    {
        "content": "<p>Thanks. It's late, and tomorrow is filled with personal stuff. But Thursday...</p>",
        "id": 348560925,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681246670
    },
    {
        "content": "<p>I'm pretty busy starting Thursday afternoon for a while, some time might be available on Monday or Tuesday and then another busy week starting Wednesday, so I will polish this up, send you an updated PR and then I suggest you pick &amp; choose what you want. If you don't want checksum checks then please at least add a log of the checksum. Also, if you don't pick the <code>-j1</code> for flatpak then fix the bloody build, as it is driving me crazy. Here is an example of a failed build: <a href=\"https://app.circleci.com/pipelines/github/opencpn-radar-pi/radar_pi/368/workflows/2f997098-40cf-401a-b67c-1edd520d21f9/jobs/2677\">https://app.circleci.com/pipelines/github/opencpn-radar-pi/radar_pi/368/workflows/2f997098-40cf-401a-b67c-1edd520d21f9/jobs/2677</a> </p>\n<p>note the actual error is here this time:</p>\n<div class=\"codehilite\"><pre><span></span><code>[ 53%] Linking CXX static library libNMEA0183.a\ncd /run/build/radar/_flatpak_build/libs/nmea0183 &amp;&amp; /usr/bin/cmake -P CMakeFiles/NMEA0183.dir/cmake_clean_target.cmake\n/usr/bin/ranlib libNMEA0183.a\ncd /run/build/radar/_flatpak_build/libs/nmea0183 &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/NMEA0183.dir/link.txt --verbose=1\n/usr/bin/ranlib: &#39;libNMEA0183.a&#39;: No such file\n</code></pre></div>",
        "id": 348562155,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681247211
    },
    {
        "content": "<p>Also, I think the <code>wx32</code> verification is worthwhile: it turned out that for months we may have shipped packages advertising wx32 that didn't contain it or the other way around. Also the Debian-wx32;11;armhf and Debian;11;armhf builds trampled over each others results (that would be a fine way to mess with build checksums, if it would pick the tar from one build and the xml from the other...)</p>",
        "id": 348562763,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681247498
    },
    {
        "content": "<p>Yup, will do. I suppose you run into this since radar_pi is one of the largest plugins which puts more stress on the build system than others.</p>\n<p>That said, that particular error looks like a missing dependency error, cmake shouls be able to handle parallel builds. The reason we have limited the job count in other places has been that the builder could not handle the load, they basically ran out of memory.</p>\n<blockquote>\n<p>Also, I think the wx32 verification is worthwhile: it turned out that for months we may have shipped packages advertising wx32 that didn't contain it or the other way around.</p>\n</blockquote>\n<p>Perhaps. But in that case in cmake code so local builds also benefits from it. In a longer perspective my idea is that we should make an automated \"is-plugin-loadable\" test using the new  CLI utility, this should reveal errors like this but also other bad apples in the catalog.</p>",
        "id": 348563202,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681247699
    },
    {
        "content": "<p>That is a neat idea, have OpenCPN test it during the build: download the targeted OpenCPN version and check it using that. Cool!</p>",
        "id": 348564856,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681248488
    },
    {
        "content": "<p>hm... the helicopter view is that we have both the SD and the TP templates around.  Of course we try to fix SD to the best of our ability, but we are not the only one around.</p>\n<p>Perhaps a better strategy would be to add these tests (checksum,  wx32) to the checks which runs automatically on each PR  to the catalog i. e., the OPenCPN/plugins project. This would catch all bad plugins before they was included in the catalog however they was created</p>",
        "id": 348564959,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681248559
    },
    {
        "content": "<p>As for SD, local test for the checksum I think a separate script would be the best. The best would if it was not referenced at all by the overall build, it could be run as a separate step in circleci/config. That would make it easy to only invoke it if needed i. e., for Debian Bullseye builds.</p>",
        "id": 348565338,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681248751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/checksum.20errror/near/348564959\">said</a>:</p>\n<blockquote>\n<p>hm... the helicopter view is that we have both the SD and the TP templates around.  Of course we try to fix SD to the best of our ability, but we are not the only one around.</p>\n<p>Perhaps a better strategy would be to add these tests (checksum,  wx32) to the checks which runs automatically on each PR  to the catalog i. e., the OPenCPN/plugins project. This would catch all bad plugins before they was included in the catalog however they was created</p>\n</blockquote>\n<p>Hmm yes indeed. Today, once I started pushing builds into <code>radar_pi:unstable</code> on cloudsmith it took more than 20 minutes to be download-able. So we can't realistically check the catalog from the CI build.</p>\n<p>I will remove the <a href=\"http://verify-result.sh\">verify-result.sh</a> script and add it to my own repo only, for now, so I don't f***k up. Then when I have time I will generate a PR for OpenCPN/Plugins, that is a much better idea.</p>",
        "id": 348565819,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681248988
    },
    {
        "content": "<p>OK the PR for SD is now _much_ smaller and ready as far as I am concerned. Time for Zzzz.</p>",
        "id": 348576473,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681253901
    },
    {
        "content": "<p>Oooh now the plot thickens: the checksum in the OpenCPN/plugins code now fails the other way around! Sorry I need to leave so just quickly:</p>\n<ul>\n<li>automated check on my PR says:</li>\n</ul>\n<p>metadata/Radar-v5.5.0-msvc-wx32-10.xml: Radar-v5.5.0_msvc-wx32-10-win32.tar.gz<br>\n        metadata checksum: '<a href=\"https://github.com/opencpn/OpenCPN/commit/b72087867be4b73dde1b4aeb1980fa05c2d45de06908df2a64cc9be3a7cc9745\">b72087867be4b73dde1b4aeb1980fa05c2d45de06908df2a64cc9be3a7cc9745</a>'<br>\n        computed checksum: '<a href=\"https://github.com/opencpn/OpenCPN/commit/cabc6ebdb5f5b84c4df1cd53c0505476cce0d2cddd7e126f22cfb26426773d9f\">cabc6ebdb5f5b84c4df1cd53c0505476cce0d2cddd7e126f22cfb26426773d9f</a>'</p>\n<p>BUT on my Mac, on the downloaded .tar.gz file:</p>\n<p>$ sha256sum Radar-v5.5.0_msvc-wx32-10-win32.tar.gz<br>\n<a href=\"https://github.com/opencpn/OpenCPN/commit/b72087867be4b73dde1b4aeb1980fa05c2d45de06908df2a64cc9be3a7cc9745\">b72087867be4b73dde1b4aeb1980fa05c2d45de06908df2a64cc9be3a7cc9745</a>  Radar-v5.5.0_msvc-wx32-10-win32.tar.gz</p>\n<p>And my original generated metadata contained that same checksum:</p>\n<p>metadata/Radar-v5.5.0-msvc-wx32-10.xml: Radar-v5.5.0_msvc-wx32-10-win32.tar.gz<br>\n        metadata checksum: '<a href=\"https://github.com/opencpn/OpenCPN/commit/cabc6ebdb5f5b84c4df1cd53c0505476cce0d2cddd7e126f22cfb26426773d9f\">cabc6ebdb5f5b84c4df1cd53c0505476cce0d2cddd7e126f22cfb26426773d9f</a>'<br>\n        computed checksum: '<a href=\"https://github.com/opencpn/OpenCPN/commit/b72087867be4b73dde1b4aeb1980fa05c2d45de06908df2a64cc9be3a7cc9745\">b72087867be4b73dde1b4aeb1980fa05c2d45de06908df2a64cc9be3a7cc9745</a>'</p>\n<p>So it seems we have multiple checksum implementations running to different results on different platforms...</p>",
        "id": 349059654,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681379736
    },
    {
        "content": "<p>I will re-run this on Debian 11 amd64 later, to see whether that makes a difference.</p>",
        "id": 349062082,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681380329
    },
    {
        "content": "<p>OK, so I came back a few hours later after some other business. Guess what? It's bloody cloudsmith. I pushed a 5.5.0 to our prod repo a day ago, by accident, then earlier today I pushed a new tag to github and this in turn pushed to cloudsmith. But cloudsmith, for hours, kept showing the original file _depending on where you accessed it from_. So when I downloaded it, I got the new file. But if github actions downloaded it, it got the original file. Bad bad bad. </p>\n<p>So my conclusion is:</p>\n<ul>\n<li>the SHA algorithms work everywhere. (To be expected, really.)</li>\n<li><a href=\"http://cloudsmith.io\">cloudsmith.io</a> can be a pain and show up old files for hours. So if you re-push a particular tag/file, be prepared to wait a long time before it shows up in all locations, even if it works for you. </li>\n</ul>\n<p>Sigh.</p>\n<p>Anyway, 1) issue with SHA checksums now \"known\" AFAIAC.  2) Dave, you can pull PR for master plugins.</p>",
        "id": 349205397,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681417517
    },
    {
        "content": "<p>3) Please run the validator script once you pull, just as a precaution that it works in your neck of the woods as well. Maybe CloudSmith has an even longer delay elsewhere.</p>",
        "id": 349205638,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681417593
    },
    {
        "content": "<p>Any feedback as to why we're not using github for storing binaries? I see how cloudsmith is useful for test releases (without tags), but anything tagged could just as well go on github?</p>",
        "id": 349205906,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681417689
    },
    {
        "content": "<p>Is there any other problem here than re-publishing two different builds with the same version? Because thIs is not supposed to happen using the SD templates.</p>\n<p>Tagged builds should be unique. It is possible to tag two different builds with the same tag, but we don't do that, do we?</p>\n<p>Untagged builds has a unique version which includes the git hash, so they should also be unique.</p>\n<p>So, what is this about, really?</p>",
        "id": 349217640,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681422347
    },
    {
        "content": "<p>6 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"332168\" href=\"/#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/wx3.2E2.2E2.20compatibility\">#Master - 5.8.0  (was: comms) &gt; wx3.2.2 compatibility</a> by <span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span>.</p>",
        "id": 349268435,
        "sender_full_name": "Notification Bot",
        "timestamp": 1681450710
    },
    {
        "content": "<p>In an ideal world you won't push the same tag twice, but in practice ... certainly this time I did!</p>",
        "id": 349282641,
        "sender_full_name": "Kees Verruijt",
        "timestamp": 1681455819
    },
    {
        "content": "<p>Well, that's the reason. Most build systems blocks this for good reasons, and I don't see that cloudsmith does anything wrong here. Any CDN network will have these kind of synchronization delays, and there are certainly no promises.</p>\n<p>Basically,  I'd say that if you push two different versions of the same tag you are in unspecified territory without much of defined behaviour.</p>",
        "id": 349354048,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1681473369
    }
]