[
    {
        "content": "<p>As a Mac user working with both 'normal' and Retina displays, I have been mostly ignorant of the issue of screen resolution.  However, Rick and his high res Windows setup has led me to face this issue.</p>\n<p><a href=\"https://docs.wxwidgets.org/trunk/overview_high_dpi.html\">https://docs.wxwidgets.org/trunk/overview_high_dpi.html</a> explains:</p>\n<div class=\"codehilite\"><pre><span></span><code>Some systems like eg Apple&#39;s OSes automatically scale all the coordinates\nby the DPI scaling factor, however not all systems supported by wxWidgets\ndo it â€“ notably, MSW does not. This means that logical pixels, in which all coordinates and sizes are expressed in wxWidgets API, do not have the same meaning on all platforms when using high DPI displays. So while on macOS\nyou can always pass in a size of (500,500) to create the window from the\nprevious paragraph, whatever the resolution of the display is, you would have\nto increase this to (1000,1000) on MSW when working on a 200% display.\nTo hide this difference from the application, wxWidgets provides device-independent pixels, abbreviated as &quot;DIP&quot;, that are always of the same size\non all displays and all platforms.\n\nThus, the first thing do when preparing your application for high DPI\nsupport is to stop using raw pixel values, as they mean different things\nunder different platforms when DPI scaling is used. Actually, using any\npixel values is not recommended and replacing them with the values based\non the text metrics, i.e. obtained using wxWindow::GetTextExtent(), or\nexpressing them in dialog units (see wxWindow::ConvertDialogToPixels()) is preferable. However the simplest change is to just replace the pixel values\nwith the values in DIP: for this, just use wxWindow::FromDIP() to convert\nrom one to the other.\n</code></pre></div>\n<p>So when I create, say, a wxDialog  with a desired size of <code>wxSize(200, 300)</code> I should actually use <code>FromDIP(wxSize(200, 300)</code>.  When I save the position in the preferences file, I need to convert back to DIP and then back again when loading the config.  The same applies for positions.  All doable although I need to track down all places the conversion is needed.  Do all plugins that create windows need to do this?  Or  do they already and I am just late to the party?</p>\n<p>How do we handle the situation where a window is dragged onto a screen of different resolution?<br>\nI have already reported an issue with the canvas not adjusting <a href=\"https://github.com/OpenCPN/OpenCPN/issues/3036\">#3036</a> but is this a more widespread issue?  I have a nasty hunch it might require processing the window move event and then redrawing with the correct DIP adjustment.</p>\n<p>What's the wisdom here?</p>",
        "id": 342354260,
        "sender_full_name": "Tony Voss",
        "timestamp": 1678981685
    },
    {
        "content": "<p>I just ignore it for now until I have access to a HiDPI monitor. Without it it's simply impossible to fix with all the related WX bugs hitting all the time.</p>",
        "id": 342411141,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1678996815
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"282854\" href=\"/#narrow/stream/282854-general/topic/Dealing.20with.20high.20resolution.20displays\">#general &gt; Dealing with high resolution displays</a> by <span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span>.</p>",
        "id": 342436691,
        "sender_full_name": "Notification Bot",
        "timestamp": 1679007027
    },
    {
        "content": "<p>I have the JavaScript plugin working with Windows scaled displays.  Thanks to Rick for testing.</p>\n<p>The tricky bit for this plugin is that wxFormBuilder is resolution ignorant and any constants set in it need fixing up.   During development I compiled some extra code which overlaid the methods such as <code>FromDIP</code> with ones that applied a fictitious scaling.  This had the effect of enlarging the displayed window and its fields so I could see the effect without having a screen that needed scaling - MacOS in my case but it could be Windows without a hi-res screen.  This helped greatly in finding all the places in the wxFormBuilder form where I had a constant but did not really need it.</p>\n<p>I then added a method which carries out a series of adjustments to the wxFormBuilder-generated code, such as <br>\n<code>Directory-&gt;SetSize(FromDIP(Directory-&gt;GetSize()));</code><br>\nIn  in the case of the Tools window of the JavaScript plugin it needed 24 such adjustments.</p>\n<p>I have recorded this in the Technical Guide for the plugin in the section  <em>Windows scaled displays</em>.<br>\nIf it should be available somewhere else, SKS point me to it.</p>",
        "id": 350177042,
        "sender_full_name": "Tony Voss",
        "timestamp": 1681570794
    }
]