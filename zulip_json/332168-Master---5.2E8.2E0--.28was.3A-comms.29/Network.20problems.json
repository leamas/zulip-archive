[
    {
        "content": "<p>DAve wrote: <br>\nNew top, interleaved, if you do not mind.<br>\nHakan and I are working a linux network problem. Simplest scenario we can contrive:</p>\n<p>One machine, linux or Win, transmitting UDP, 1 Hz N0183 position data.<br>\nOne linux machine, receiving UDP N0183 data, initially working fine, as expected.<br>\nAfter 19-20 minutes, the linux receiver seems to stall for about 15 seconds, eventually picking up and processing a lot of queued traffic.<br>\nThis feels like some buffer overflow/rearrangement in linux side. Wireshark logs show no interruption in UDP output from (1).<br>\nAs you might understand, this causes watchdog starvation on receiver side.<br>\nAdditionally, we can reproduce on OCPN 562, so not (probably) related to new O571 network stack.<br>\nAlso seen on socketCAN, understandable since socketCAN probably uses the linux internal socket stack.<br>\nThe strangest thing is, even if we increase the traffic, by using a VDR playback of a complex environment, using TCP, the effect still occurs. 19-20 minutes is the magic number.<br>\nThoughts?</p>",
        "id": 320328001,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673297304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  ^</p>",
        "id": 320328117,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673297361
    },
    {
        "content": "<p>hm... let's focus on the UDP case.   TCP adds buffering, sliding windows, socket and what not, it's just more complicated. UDP is the simple case.</p>",
        "id": 320328387,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673297458
    },
    {
        "content": "<p>And... UDP is not buffered in any way, it's just a best effort attempt to deliver a packet. If it's lost, it's lost.</p>\n<p>Could it it be a network problem? Is a router involved, or is it traffic on a single segment?</p>",
        "id": 320328794,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673297605
    },
    {
        "content": "<p>Or, in  other words: can this be reproduced in two different networks, or are you sharing a common test setup?</p>",
        "id": 320328958,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673297653
    },
    {
        "content": "<p>Yes, that is why we simplified to UDP.<br>\nStarted on Hakan's setup.  I have started some tests here, but inconclusive.  One CF post on Beta#2 suggests the same thing, data drop after 19 minutes on socketCAN.</p>",
        "id": 320330110,
        "sender_full_name": "Dave Register",
        "timestamp": 1673298078
    },
    {
        "content": "<p>UDP test are done on single local subnet/segment.</p>",
        "id": 320330648,
        "sender_full_name": "Dave Register",
        "timestamp": 1673298277
    },
    {
        "content": "<p>I can use the same TCP or UDP source for two Win and one Rpi4-32-Buster. All these shows no time out like this.<br>\nThe RPi400 -64- Debian 11 using the same source time out after about 20 minutes. <br>\nMassive short  \"lost network\" and  \"established network\" until it halts for nearly a minute. Then ok until next about 20 minutes.<br>\n(My friends RPi400 suffer the same)</p>",
        "id": 320331029,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673298450
    },
    {
        "content": "<p>Common thread may be debian 11?</p>",
        "id": 320331285,
        "sender_full_name": "Dave Register",
        "timestamp": 1673298543
    },
    {
        "content": "<p>It may be common Debian 11 but I'm not 100% sure about my friends. But I'm sure it's -64 b</p>",
        "id": 320332122,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673298861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  Just edit the topic name as you like. \"It's easier be be forgiven than to get a permission\"</p>",
        "id": 320332149,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673298871
    },
    {
        "content": "<p>This is a network problem, so I'm happy.</p>",
        "id": 320332304,
        "sender_full_name": "Dave Register",
        "timestamp": 1673298943
    },
    {
        "content": "<p>Anyone of you having a -64-Debian (11) to test on my server: <a href=\"http://signalk.stupan.se\">signalk.stupan.se</a>  TCP port:10112</p>",
        "id": 320332713,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673299116
    },
    {
        "content": "<p>I have asked LeaseOnLife  the CF OP for this issue, for his config.  He will wake up soon.  Pretty sure it is RPi hardware.</p>",
        "id": 320332725,
        "sender_full_name": "Dave Register",
        "timestamp": 1673299122
    },
    {
        "content": "<p>I will try to setup a test tonight.</p>",
        "id": 320332800,
        "sender_full_name": "Dave Register",
        "timestamp": 1673299155
    },
    {
        "content": "<p>I haev some 64-bit RPis around, perhaps Fedora flatpak, perhaps Debian 11 or sid.  Will take som time to check, stay tuned.</p>",
        "id": 320333035,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673299236
    },
    {
        "content": "<p>Late in SE.  To be continued...</p>",
        "id": 320333472,
        "sender_full_name": "Dave Register",
        "timestamp": 1673299386
    },
    {
        "content": "<p>Yes. See you..</p>",
        "id": 320333547,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673299412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  I'm about to be late. What is the test, exactly? I have 64-bit Debian running, but nothing installed on it</p>",
        "id": 320333967,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673299558
    },
    {
        "content": "<p>Stuck on cloning the sources, github hickup</p>",
        "id": 320334834,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673299845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span>    The test is run OCPN and for example use my server. A good indicator is a Dashboard panel with \"Wind history graph\".<br>\nIt shall fill the whole graph without reset after 20 minutes or so. O from present master has a watchdog for the graph on 40 seconds so it should stand a lot without data reset and restart from an empty graph.</p>",
        "id": 320335727,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673300204
    },
    {
        "content": "<p>That is:</p>\n<ul>\n<li>Set up a new data connection to your server <a href=\"http://signalk.stupan.se\">signalk.stupan.se</a> TCP port:10112. Have you an UDP sourcd as well?</li>\n<li>Start the dashboard plugin panel with \"Wind History Graph\" (black magic)</li>\n<li>Wait for about 20 minutes until the whole graph is filled. </li>\n</ul>\n<p>Good result: filled graph<br>\nBad result:  graph reset and restarted</p>\n<p>OK?</p>",
        "id": 320336484,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673300538
    },
    {
        "content": "<p>building...</p>",
        "id": 320337047,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673300809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> I have a 64-bit debian 11.5  running with current master. However, I don't understand how to tweak the dashboard panel to show also history. I can see the actual value of for example Apparent Wind Direction, but that's basically it. </p>\n<p>Any ideas?</p>",
        "id": 320346500,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673304665
    },
    {
        "content": "<p>night...</p>",
        "id": 320347325,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673305082
    },
    {
        "content": "<p>The only \"history\" instrument available is \"WindHistory\".</p>\n<ol start=\"0\">\n<li>Show a dashboard.</li>\n<li>Right click on a dashboard panel, select Preferences.</li>\n<li>Add an instrument.  Select WindHistory.</li>\n<li>OK.</li>\n</ol>",
        "id": 320353730,
        "sender_full_name": "Dave Register",
        "timestamp": 1673308413
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>Have you an UDP sourcd as well?\n</code></pre></div>\n\n</blockquote>\n<p>No not on that server for the time being. The way I test UDP is to connect some N0183 sensors to another PC and send all out on a UDP connection. Then receive UDP on the other machines. <br>\nI suppose I could arrange a UDP channel on the SK server if desired?</p>",
        "id": 320389895,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673335623
    },
    {
        "content": "<p>For info I receive the same data interruption at the RPi400 after ~20 minutes when using SignalK mode.<br>\nAlthough no connection lost log entry only the \"GPS Watchdog.....\"</p>",
        "id": 320397145,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673338982
    },
    {
        "content": "<p>LoL reported he's using RPi4 -32 - Debian 12. Strange combination 32 b and Debian 12?</p>",
        "id": 320397481,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673339126
    },
    {
        "content": "<p>Good morning</p>\n<p>After building from current master  b0b37adf9fa89 I don't have any WindHistory available. OTOH, I do have a Barometer History, looks like below after running over the night</p>\n<p><a href=\"/user_uploads/33951/mdQuGldazTOfvXR2g-LvTLnF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/33951/mdQuGldazTOfvXR2g-LvTLnF/image.png\" title=\"image.png\"><img src=\"/user_uploads/33951/mdQuGldazTOfvXR2g-LvTLnF/image.png\"></a></div>",
        "id": 320407794,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673342977
    },
    {
        "content": "<p>Now I actually found that WindHistory.  Tired yesterday? Running now</p>",
        "id": 320409797,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673343671
    },
    {
        "content": "<p>And you need to use history graphs in a single Dashboard to be able to extend it. Not in a board with other small instruments.<br>\nTo make a new Dashboard use the + icon down left in preferences. It use to be convenient to rename the new board.<br>\n<a href=\"/user_uploads/33951/QsjXgYw_FkyJKxPVCvzouBNh/bild.png\">bild.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/33951/QsjXgYw_FkyJKxPVCvzouBNh/bild.png\" title=\"bild.png\"><img src=\"/user_uploads/33951/QsjXgYw_FkyJKxPVCvzouBNh/bild.png\"></a></div>",
        "id": 320410777,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673344026
    },
    {
        "content": "<p>To check for network obstacle using TCP you can also inspect the log file for lost connection and GPS watchdog.</p>",
        "id": 320411145,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673344175
    },
    {
        "content": "<p>OK, the single dasboard is running.</p>\n<blockquote>\n<p>To check for network obstacle using TCP you can also inspect the log file for lost connection and GPS watchdog.</p>\n</blockquote>\n<p>Have you any examples so I can grep for them?</p>",
        "id": 320411469,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673344288
    },
    {
        "content": "<p>Away for some minutes.</p>",
        "id": 320411623,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673344328
    },
    {
        "content": "<p>Examples:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>13:13:52.381 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:signalk.stupan.se:10112\n</code></pre></div>\n\n<p>13:13:57.384 MESSAGE comm_bridge.cpp:190    ***GPS Watchdog timeout at Lat:57.7458   Lon: 11.6482<br>\n13:13:57.885 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:signalk.stupan.se:10112<br>\n13:14:45.174 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:signalk.stupan.se:10112<br>\n13:14:49.419 MESSAGE comm_bridge.cpp:190    ***GPS Watchdog timeout at Lat:57.7468   Lon: 11.6449<br>\n13:14:50.274 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:signalk.stupan.se:10112<br>\n13:16:41.366 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:signalk.stupan.se:10112<br>\n13:16:45.494 MESSAGE comm_bridge.cpp:190    ***GPS Watchdog timeout at Lat:57.749   Lon: 11.6375<br>\n13:16:46.373 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:signalk.stupan.se:10112</p>\n</blockquote>",
        "id": 320412586,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673344643
    },
    {
        "content": "<p>Also away to handle firewood storage.</p>",
        "id": 320413284,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673344897
    },
    {
        "content": "<p>I have those <em>connection established:</em> here and there in the log, but nothing like every 20 minute. The window is filled, so I guess it's fair to say I don't have this bug on my setup.<br>\n<a href=\"/user_uploads/33951/hkPQk6aBlAqsp85jak21oSia/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/33951/hkPQk6aBlAqsp85jak21oSia/image.png\" title=\"image.png\"><img src=\"/user_uploads/33951/hkPQk6aBlAqsp85jak21oSia/image.png\"></a></div>",
        "id": 320416791,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673346078
    },
    {
        "content": "<p>All  looks OK in my logs. Question then is about differences between our two setups. The obvious is 64-bit vs 32, theoretically it shouldn't matter. That aside:</p>\n<ul>\n<li>I have built opencpn from source, current master at b0b37adf9. What version are you using?</li>\n<li>I have a fully updated OS. What about you?</li>\n</ul>",
        "id": 320424028,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673348457
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><code> have those connection established: here and there in the log\n</code></pre></div>\n\n</blockquote>\n<p>So why does the connection fail and need to reestablish?? That's the main issue here.<br>\nI also have these but about every 20 minutes or so the \"gap\" is longer than 40 seconds causing the wind history to reset. Shorter delays he will survive. The wind history as such is not the main trouble. I use it as a indicator to not have to look for delays all time. </p>\n<p>I've O from master all time.<br>\nOS updated all time.</p>",
        "id": 320434619,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673352260
    },
    {
        "content": "<p>... and your  are using a RPI-4, but with a 32-bit kernel I guess. To be precise: What does <code>uname -a</code>say on your box?  I have </p>\n<div class=\"codehilite\"><pre><span></span><code>$ uname -a\nLinux raspberrypi 5.15.76-v8+ #1597 SMP PREEMPT Fri Nov 4 12:16:41 GMT 2022 aarch64 GNU/Linux\n</code></pre></div>",
        "id": 320436390,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673352865
    },
    {
        "content": "<p>In the end, I see two possible explanations here. The first would be something related to the OS,  the other something about the network. The way to find out which would be to run both 32-bit and 64-bit on the same network i. e., that I spin up a 32-bit host or you spin up a 64-bit. </p>\n<p>If we have the same situation (64-bit works, 32-bit not)  we can exclude the network setup. It's then either about the OS or some bug in opencpn which only is visible in 32-bit mode.</p>\n<p>Can we make the same test on 5.6.2 and check?</p>",
        "id": 320437691,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673353288
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span> </p>\n<blockquote>\n<p>Can we make the same test on 5.6.2 and check?</p>\n</blockquote>\n<p>\"We\" really meaning you or <span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  since I so far cannot reproduce the error.</p>",
        "id": 320438822,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673353674
    },
    {
        "content": "<p>I did yesterday. Using O 5.6.2 installed by Openplotter.<br>\nThe same \"gaps\" occurred on the RPi400.</p>",
        "id": 320449863,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673357172
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><code> and your are using a RPI-4, but with a 32-bit kernel I guess. To be precise: What does uname -asay on your box? I have\n</code></pre></div>\n\n</blockquote>\n<p>No it's 64 Debian 11 and called RPi400<br>\nuname -a<br>\nLinux RPi400 5.15.84-v8+ #1613 SMP PREEMPT Thu Jan 5 12:03:08 GMT 2023 aarch64 GNU/Linux</p>",
        "id": 320451151,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673357545
    },
    {
        "content": "<p>And again....<br>\nAll running simultaneously the same TCP source e.g. my server:<br>\nSeveral Win are working.<br>\nRPi4 32 Buster is working<br>\nRpi400 -64-Debian 11, only, is suffering the interruptions discussed. i.e. using O 5.6.2 or 5.7.1</p>",
        "id": 320453269,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673358136
    },
    {
        "content": "<p>And to exclude my server being the cause I done the same simultaneous run but UDP feed from a Win PC using two serial sensors as data source.<br>\nThe same result as above</p>",
        "id": 320454207,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673358435
    },
    {
        "content": "<p>Which would mean:</p>\n<ul>\n<li>We are both on fully updated Raspbian/Debian 11.</li>\n<li>We are both on opencpn current master, built from source  and installed using <code>make install</code> (?)</li>\n<li>We are both using the same server and basically the same internet.</li>\n<li>You have a more recent kernel <em>Linux RPi400 5.15.84-v8+</em>  versus my <em>5.15.76-v8+ #1597</em>, probably something tailored specifically for RPi400.</li>\n</ul>\n<p>Besides the different kernels the only thing I can think of is thus what's  between our RPIs  and internet i. e., local network problems.  No idea what that could be.</p>\n<p>We need input from <span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  about what kernel he is on.</p>\n<p>Thoughts?</p>",
        "id": 320461026,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673360326
    },
    {
        "content": "<p>Perhaps this is about kernel + hardware rather than opencpn. But in that case we should be able to reproduce this without involving opencpn, using nc or so. </p>\n<p>I need some food. BBL</p>",
        "id": 320462939,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673360861
    },
    {
        "content": "<p>I am building fresh on RPi4.  Takes awhile.<br>\nLinux raspberrypi 5.10.103-v8+ #1530 SMP PREEMPT Tue Mar 8 13:06:35 GMT 2022 aarch64 GNU/Linux</p>",
        "id": 320474887,
        "sender_full_name": "Dave Register",
        "timestamp": 1673363881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  <span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> </p>\n<p>Here is a oneliner which should reveal if we are dealing with a hardware/kernel  problem rather than a opencpn issue. It dumps input from Håkan's server to a file. If the connection is reset is should be possible to detect this,  either if nc aborts or if there is a \"gap\" in the log. The latter might require some post processing if ther need arises.</p>\n<p>I'll start this on my host now and run for at least 30 minutes. If everything is as expected, I'll get a log without any gaps. The question is what happens on an RPi 400.</p>\n<p>The netcat package is required, install using <code>sudo apt install netcat-traditional</code>.</p>\n<p>The oneliner:</p>\n<div class=\"codehilite\"><pre><span></span><code>nc signalk.stupan.se 10112 | bash -c &#39;while read; do echo $(date) $REPLY; done&#39;  &gt; stupan.log\n</code></pre></div>\n<p>OK?</p>",
        "id": 320475780,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673364048
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> You seem to be on a \"real\" RPI4 like me, but on an older kernel. Have you updated your system?</p>",
        "id": 320477106,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673364356
    },
    {
        "content": "<p>No recent update. I'll get a datapoint here, then consider update.</p>",
        "id": 320478521,
        "sender_full_name": "Dave Register",
        "timestamp": 1673364713
    },
    {
        "content": "<p>OK, seems reasonable.</p>",
        "id": 320478929,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673364838
    },
    {
        "content": "<p>but you can still run the test above to check the OS....</p>",
        "id": 320479119,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673364889
    },
    {
        "content": "<p>Running it now...</p>",
        "id": 320480478,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673365297
    },
    {
        "content": "<p>Half an hour &gt;&gt; 5 MB  I haven't checked every time span but regular ~10 empty rows but all within a second or two.<br>\nBetween empty rows always a message: $PMCAG,900,3-D,L*5B  I don't recognize. I'll check more later.</p>",
        "id": 320489821,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673367748
    },
    {
        "content": "<p>ok, should not be a os problem then.  let's wait for Dave testing master</p>",
        "id": 320490818,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673368026
    },
    {
        "content": "<p>I've searched the file for time spans &gt;10 seconds between rows. Nothing found.  <br>\nI suppose empty rows is not a problem although present as a regular pattern.<br>\nlike this:<br>\nTue 10 Jan 17:10:19 CET 2023 !AIVDM,1,1,,B,13u?qPP0000nI&gt;TQ0g=&lt;v1BT00Rs,0*26<br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 $PMCAG,900,3-D,L*5B<br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 $PMCAG,900,3-D,L*5B<br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 <br>\nTue 10 Jan 17:10:19 CET 2023 $GPGSV,3,1,11,32,11,236,36,6,18,33,34,20,6,91,,11,38,70,38*4B</p>",
        "id": 320520122,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673376373
    },
    {
        "content": "<p>Empty rows just reflects that nc got  some  extra newlines from your server.  Let's drop this for now, assuming that the OS is ok until we get more input from <span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span></p>",
        "id": 320526259,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673378243
    },
    {
        "content": "<p>For info I just spoke to friend Gunnar also running a similar Rpi400 as me. Using present master code he experienced just now the same gap causing wind history graph to reset after ~20 minutes. He's also using my TCP (or SK?) server.</p>",
        "id": 320530894,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673379720
    },
    {
        "content": "<p>Different local network for Gunnar, otherwise the same.</p>\n<p>We are on different hardware. Dave and I are on a \"real\" RPi-4,  you and Gunnar are  on RPi-400.</p>\n<p>So far, I am the only one which cannot reproduce this. I  am also the only one on the   <em>5.15.76-v8+</em> kernel version.  I have no better idea than that <span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  first checks his build and verifies that it's the same status i. e.,  with gaps.   Next step would be either be to update Dave's box  and check if the problem is gone when he is on the same configuration as me. </p>\n<p>The alternative would be that I formatted a new SD card with a fresh installation and uses that to see if the old kernel triggers the error. This is many hours of work, so I'd prefer not to.</p>",
        "id": 320534540,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673380898
    },
    {
        "content": "<p>Here I am on RPi4, running something labeled RaspiOS Bullseye/64.  Connected to Hakan's TCP server.<br>\nLive test result on OCPN/master, with WindHistory.<br>\n<strong>Result:  WindHistory instrument resets after 19 minutes.  Repeatable.</strong><br>\nConclusion:  No behavioral difference between RPi4 and RPi 400<br>\nHmmmm</p>",
        "id": 320550906,
        "sender_full_name": "Dave Register",
        "timestamp": 1673387112
    },
    {
        "content": "<p>Alec, where did you get your RPi image?  A download, or homemade?</p>",
        "id": 320551708,
        "sender_full_name": "Dave Register",
        "timestamp": 1673387413
    },
    {
        "content": "<blockquote>\n<p>Alec, where did you get your RPi image? A download, or homemade?</p>\n</blockquote>\n<p>Don't remember exactly. However, I <strong>think</strong> I just  used rpi-imager, a tool from Raspbian and selected 64-bit. I think it was pretty close to the point in time when the 64-bit release was dubbed official and no longer a  beta.</p>\n<p>But I have done  changes after that, notably updated using apt. Also removed the VNC server bundled with the OS which is IMHO broken . </p>\n<p>Anyone using the bundled VNC server?</p>",
        "id": 320561916,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673391755
    },
    {
        "content": "<p>That is, the image was not homemade.</p>",
        "id": 320561984,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673391794
    },
    {
        "content": "<p>For verification, on same hardware, I tested also using O562, bone stock package installed from launchpad repo.  No changes to OCPN configuration files.<br>\n<strong>Result:  Same reset of WindHistory every 19-20 minutes</strong>.  Leave it run, and will repeat forever.</p>",
        "id": 320578468,
        "sender_full_name": "Dave Register",
        "timestamp": 1673401891
    },
    {
        "content": "<p>So, probably we can eliminate the new 571 comm stack from the question.</p>",
        "id": 320578571,
        "sender_full_name": "Dave Register",
        "timestamp": 1673401943
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> </p>\n<blockquote>\n<p>So, probably we can eliminate the new 571 comm stack from the question.</p>\n</blockquote>\n<p>Yes. But can we eliminate the kernel and the overall update status of the system? That is, have you updated your system using apt so it comes into same state as mine?</p>",
        "id": 320656626,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673430479
    },
    {
        "content": "<p>A minor comment:<br>\nDon't explicitly look for the ~19 minutes. Five or more minutes before that there are a increasingly number of \"gaps\" shorter than the 40 seconds needed to reset W-hist. Study another instrument where the watchdog is 10 seconds. e.g. App &amp; True wind. <br>\nAfter the long gap, @~19 min, the stream is rather stable for say 15 minutes.</p>",
        "id": 320665141,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673433412
    },
    {
        "content": "<p>Updating my kernel now.  Takes a while...</p>",
        "id": 320982411,
        "sender_full_name": "Dave Register",
        "timestamp": 1673541556
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span>  <br>\nHmmm...<br>\nAfter<br>\n$ sudo apt update<br>\n$ sudo apt upgrade</p>\n<p>I still have my older kernel.<br>\nLinux raspberrypi 5.10.103-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1530\">#1530</a> SMP PREEMPT Tue Mar 8 13:06:35 GMT 2022 aarch64 GNU/Linux</p>\n<p>Suggestions?</p>",
        "id": 320987665,
        "sender_full_name": "Dave Register",
        "timestamp": 1673542938
    },
    {
        "content": "<p>Have you rebooted after upgrade?</p>",
        "id": 320989591,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673543457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> <br>\nPalm on forehead....<br>\nNow I get:</p>\n<p>Linux raspberrypi 5.15.84-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1613\">#1613</a> SMP PREEMPT Thu Jan 5 12:03:08 GMT 2023 aarch64 GNU/Linux<br>\nWill test now.</p>",
        "id": 320993832,
        "sender_full_name": "Dave Register",
        "timestamp": 1673544703
    },
    {
        "content": "<p><span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 320994770,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673544937
    },
    {
        "content": "<p>Hakan...<br>\nDid you mean 40 seconds on WindHistory reset?  Where in the code is this set?</p>",
        "id": 321034939,
        "sender_full_name": "Dave Register",
        "timestamp": 1673557797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  ^</p>",
        "id": 321035144,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673557897
    },
    {
        "content": "<p>Tested RPi4/64  on new kernel.  Hakan's TCP stream. Results:</p>\n<ol>\n<li>WindHistory resets every ~20/25 minutes.</li>\n<li>netcat shows a number of 3-4 second gaps, nothing longer.<br>\nhmmmmm...</li>\n</ol>",
        "id": 321068123,
        "sender_full_name": "Dave Register",
        "timestamp": 1673573997
    },
    {
        "content": "<blockquote>\n<p>40 seconds on WindHistory reset? Where in the code is this set?</p>\n</blockquote>\n<p>dashboard.h: 86<br>\n// SignalK motor &amp; environ instr defaults 30 sec update frequency<br>\n#define no_nav_watchdog_timeout_ticks 40</p>",
        "id": 321076633,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1673580707
    },
    {
        "content": "<blockquote>\n<p>WindHistory resets every ~20/25 minutes.</p>\n</blockquote>\n<p>The thing is what differs between my and your system. They have the same OS, same hardware, same user space code. And still...</p>\n<p>If you want I can arrange so you can access my box over ssh and vnc so you can compare the details. Just let me know and I'll set it up.</p>",
        "id": 321355963,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673702472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  ^</p>",
        "id": 321355999,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1673702484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> <br>\nI am not sure where to look, frankly.  Next step is to try some Wireshark on UDP, I think.  This I can do locally.</p>",
        "id": 321514114,
        "sender_full_name": "Dave Register",
        "timestamp": 1673804495
    },
    {
        "content": "<p>Some observations FWIW:<br>\nThe RPi400 is connected to can0 where POS and SAT are prio 0<br>\nIt's also connected to TCP stupan wher POS and SAT are prio1 and wind, depth and more are used by plugin Dashboard.</p>\n<p>Before the long timeout, detected by Wind history 40 seconds reset, other 10 seconds watchdog instruments are timed out several times. That's nothing new.<br>\nBut I saw all 10 sec instruments are timed out. Including the SAT data from can0! Although CanBus-can0 is not a IP network it's in some way still handled by the network driver, or?<br>\nI also noticed the long timeout is always released and network reconnected immediately when the 40 seconds Dashboard watchdog has counted down and the wind history is reset. That's kind of strange? Why is the data stream always reestablished just when the watchdog has timed out and not some arbitrary time after that? </p>\n<p>Could it still be something in OCPN and the data channel to Plugin Dashboard creating this all network halt or if it's about some filled up buffer function. Why any function in OCPN should react like this only with this specific 64 bit Debian kernel I can't imagine. It's just a thought based on what I noticed and described above. <br>\nYou can also notice I don't have the right words to discuss the technical and programmable details but my thoughts may be able to transfer to \"your\" language?</p>\n<p>Abstract questions:</p>\n<ul>\n<li>Why are all \"network\" data streams affected, also can0?</li>\n<li>Why are all \"network\" reestablished the same second Dashboard watchdog(s) has counted down?</li>\n</ul>",
        "id": 322699732,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1674297715
    },
    {
        "content": "<p>Statistics about kernel and more.<br>\nI updated my RPi4-32- Buster to the same kernel as on the RPi400-64-Bullseye<br>\nBut still no network \"gap\" on the RPi4. So it may not be the kernel as such disturbing our socket? It's another combination.<br>\nI'll see if I can update the RPi4 to -64 and Bullseye in two steps and test in between.</p>\n<p>cat /etc/os-release<br>\nPRETTY_NAME=\"Raspbian GNU/Linux 10 (buster)\"<br>\npi@RPi4:~ $ uname -a<br>\nLinux RPi4 5.15.89-v7l+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1620\">#1620</a> SMP Wed Jan 18 12:22:20 GMT 2023 armv7l GNU/Linux</p>\n<p>cat /etc/os-release<br>\nPRETTY_NAME=\"Debian GNU/Linux 11 (bullseye)\"<br>\npi@RPi400:~/Builds/OpenCPN/build $ uname -a<br>\nLinux RPi400 5.15.89-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1620\">#1620</a> SMP PREEMPT Wed Jan 18 12:26:08 GMT 2023 aarch64 GNU/Linux</p>",
        "id": 323119746,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1674508653
    },
    {
        "content": "<p>More about the test to update the RPi4 to at what stage the network \"Gap\" appears.<br>\nThe kernel as such, 5.1.5.89, was not causing the socket(?) to time out every 20 minutes.<br>\nNext step was to update to 64 bit OS, still on Buster:</p>\n<blockquote>\n<p>Linux RPi4 5.15.89-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1620\">#1620</a> SMP PREEMPT Wed Jan 18 12:26:08 GMT 2023 aarch64 GNU/Linux</p>\n</blockquote>\n<p>OCPN though still say's it's armhf:</p>\n<blockquote>\n<p>wxWidgets version: wxWidgets 3.0.4 Linux 32 bit wxGTK<br>\nOCPN_OSDetail:  armhf ; Raspbian GNU/Linux ; 10 ; raspbian ; debian</p>\n</blockquote>\n<p>Still no socket \"gaps\" detected.<br>\nSo then next step was to try BullsEye. Not succeed.<br>\nSince Bullseye is the last step to conclude what combination leads to the socket \"gaps\" I can't say for sure it's so since it's not verified.</p>\n<p>Debian 10 to 11:<br>\nI made a SD card backup copy. (Sadly, I  didn't tried this and that ignorance cost me a lot)<br>\nFollowed advises on the Raspberry site I made a switch from Buster to Bullseye.<br>\nA long story made short: </p>\n<ul>\n<li>Python need an alias.</li>\n<li>wifi is not started after reboot although rfkill is cleaned.</li>\n<li>Anydesk doesn't work. (Known issue.)</li>\n<li>OCPN crashes although while starting he still log: \"OSDetail:  armhf\"<br>\nUsing a fresh build with new dependencies dgb claim:<blockquote>\n<p>.... Opened 2 sockets for mDNS service<br>\nService mDNS: opencpn-object-control-service.:8000<br>\nHostname: RPi4<br>\nSending announce<br>\nwarning: JITed object file architecture armv8-a is not compatible with target architecture armv6.<br>\n[New Thread 0xd45b9a40 (LWP 13971)]<br>\n[Detaching after fork from child process 13979] <br>\n---Sigfault<br>\nSo now I've to redo everything from a fresh Openplotter 64b image.  (-Do never touch a working system!!)<br>\nHopefully I can copy all SignalK settings from the config files...</p>\n</blockquote>\n</li>\n</ul>",
        "id": 323498994,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1674656958
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> <br>\nMaybe a step forward to find out what's causing the network gaps or 20 minutes time out.</p>\n<p>My updated RPi4 to 64b Bullseye is not good but OCPN is now running without network timeouts!<br>\nThe difference here from a \"official\" 64 - Bullseye is that OCPN don't recognize it's 64 bit.<br>\nConclusions/Thoughts?</p>\n<p>RPi4 without gaps:<br>\nLinux RPi4 5.15.89-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1620\">#1620</a> SMP PREEMPT Wed Jan 18 12:26:08 GMT 2023 aarch64 GNU/Linux<br>\nwxWidgets version: wxWidgets 3.0.4 Linux 32 bit wxGTK<br>\nOCPN_OSDetail: armhf ; Raspbian GNU/Linux ; 10 ; raspbian ; debian<br>\ncmake don't build for aarch64 but for armhf?</p>\n<p>Rpi400 where the gaps are present:<br>\nLinux RPi400 5.15.89-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1620\">#1620</a> SMP PREEMPT Wed Jan 18 12:26:08 GMT 2023 aarch64 GNU/Linux<br>\nOCPN_OSDetail:  arm64 ; Debian GNU/Linux ; 11 ; debian ;</p>",
        "id": 324157656,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1674855121
    },
    {
        "content": "<p>Two things here:</p>\n<ol>\n<li>Why does OCPN get built as armhf on a clearly aarch64 system?</li>\n<li>Why does OCNP built for ARMHF not timeout, but when built for AARCH64, it does timeout?</li>\n</ol>\n<p>Have I got this right?</p>",
        "id": 324158838,
        "sender_full_name": "Dave Register",
        "timestamp": 1674855647
    },
    {
        "content": "<p>And another, related:<br>\nOn RPI4, why does OCPN os-detail report version 10?  Is this device for sure Bullseye (11)/64?</p>",
        "id": 324159183,
        "sender_full_name": "Dave Register",
        "timestamp": 1674855795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> </p>\n<blockquote>\n<p>On RPI4, why does OCPN os-detail report version 10? Is this device for sure Bullseye (11)/64?</p>\n</blockquote>\n<p>Sorry my bad. Copy-past error. These are the data for the RPi4</p>\n<blockquote>\n<p>Linux RPi4 5.15.89-v8+ <a href=\"https://github.com/opencpn/OpenCPN/issues/1621\">#1621</a> SMP PREEMPT Tue Jan 24 11:12:35 GMT 2023 aarch64 GNU/Linux<br>\nMESSAGE ocpn_app.cpp:1228 wxWidgets version: wxWidgets 3.0.5 Linux 64 bit wxGTK<br>\nMESSAGE ocpn_app.cpp:1247 OCPN_OSDetail:  armhf ; Raspbian GNU/Linux ; 11 ; raspbian ; debian</p>\n</blockquote>\n<p>Why O claims it's armhf and not arm64 I don't know. It's probably due my change from Buster to Bullseye \"On the fly\".  This is not so important for this issue. I wont keep that image.<br>\nThe useful info here would be the network/socket \"Gaps\" are not present. All data flows wo timeouts.<br>\nA conclusion may be:<br>\nNetwork/socket does not work wo gaps on: Kernel 5.15.89, arm64 and Debian 11 <br>\nNetwork/socket does work on: Kernel 5.15.89, armhf and Debian 11</p>",
        "id": 324403024,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1674983128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  When you updated from Buster -&gt; Bullseye, was the starting point armhf?</p>\n<blockquote>\n<p>A conclusion may be:<br>\nNetwork/socket does not work wo gaps on: Kernel 5.15.89, arm64 and Debian 11<br>\nNetwork/socket does work on: Kernel 5.15.89, armhf and Debian 11</p>\n</blockquote>\n<p>I. e., a 64-bit bug somewhere... Not impossible, for sure.</p>",
        "id": 324413620,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1674988736
    },
    {
        "content": "<p>Alec..<br>\nFrom Buster to Bullseye? -  Yes!</p>\n<blockquote>\n<p>I. e., a 64-bit bug somewhere... Not impossible, for sure.</p>\n</blockquote>\n<p>Most probably so.<br>\nSo what's left? OCPN network/socket handler? Since the used network traffic sniffers show no \"gaps\" the link between the network and O multiplexer would be the cause in some way? 64 bits handler??</p>",
        "id": 324419497,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1674991792
    },
    {
        "content": "<blockquote>\n<p>From Buster to Bullseye? - Yes!</p>\n</blockquote>\n<p>Well, if you update an armhf system, the updated system is still armhf. You cannot \"update\" to another architecture, no way.</p>",
        "id": 324605766,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1675085253
    },
    {
        "content": "<blockquote>\n<p>So what's left? </p>\n</blockquote>\n<p>Basically everything... Could certainly be the low-level ocpn code, some part of it. Has anyone checked for memory leaks using valgrind?</p>",
        "id": 324606425,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1675085420
    },
    {
        "content": "<blockquote>\n<p>You cannot \"update\" to another architecture, no way.</p>\n</blockquote>\n<p>I read something about that. uname though reports aarch64?  OCPN does not report arm64 but armhf. He's not using \"uname\" to query the architecture then I suppose?<br>\nNevertheless:<br>\nStill we may have narrowed this issue to network gaps are visible on arm64 but not on armhf.<br>\nNo I have not searched for memory leaks. Not clear how to do that.</p>",
        "id": 324612040,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675086997
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>Has anyone checked for memory leaks using valgrind?\n</code></pre></div>\n\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span>  Well, I tried. After 30 minutes Valgrind hasn't succeed to load and start OCPN. I haven't used that tool before. Can you use it on the RPI?</p>",
        "id": 325457308,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675359565
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"522486\">Håkan Svensson</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/Network.20problems/near/325457308\">said</a>:</p>\n<blockquote>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>Has anyone checked for memory leaks using valgrind?\n</code></pre></div>\n\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"399510\">Alec Leamas</span>  Well, I tried. After 30 minutes Valgrind hasn't succeed to load and start OCPN. I haven't used that tool before. Can you use it on the RPI?</p>\n</blockquote>\n<p>It is probably better to build with address sanitizer, the resulting binary performs by an order of magnitude better than running under Vlagrind and IMO it is also better at detecting the leaks.</p>",
        "id": 325609252,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1675425162
    },
    {
        "content": "<p>On the RPI400 arm64 an observation I did may need to be investigated:<br>\nIf Dashboard are hid my means of click the Dashboard button in tools all instruments are kept updated \"in background\".<br>\nAlso the wind history data lists[3000] are populated. <br>\nWhen instruments are displayed the history graph lists are reset due to the data stream \"gap\"  after ~20 minutes. That's about 2/3 of a full graph.<br>\nNow I noticed when Dashboard instruments are not shown the graph is actually filled up completely wo gaps. When Dashboard is shown by the tools button the graph is fully populated! But soon after start display the \"gap\" is present and all instrument are emptied by its 10 sec watchdog. Also the history graph after the 40 seconds WD. When also the 40 sec WD is reach all data are recovered and the stream flows again as before.</p>\n<p>My conclusion is something in the DB data collection from O multiplexer to DB wind history graph is filled up and block the data stream. <br>\n\"Silly\" questions:<br>\nCan a thread be blocked if data is not forwarded.<br>\nCan the 64b architecture destroy a data list in any way? (Badly initialized?) On Debian alike only?</p>",
        "id": 326120014,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675689350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> <br>\nNow I need help to understand.<br>\nPls have look at DB: wind_history.cpp  The value for WIND_RECORD_COUNT is defined to 3000.<br>\nThat's used to size a couple of list for the history sample.<br>\nI've logged the population of the lists when the graph is reset caused by data stream \"gaps\".<br>\nAll reset was done when about 2650-2700 records have been collected. <br>\nSee log file snippet below. Look for \"SampleCount\"</p>\n<p>If I change the WIND_RECORD_COUNT size to 2500 no graph reset and we never disturb the OCPN TCP network stream. And no GPS WatchDog logs from comm_bridge.cpp.<br>\nThis would in some way be related to arm64 but I can't imagine how. (And why not Win-64)<br>\nShould e.g. double m_ArrayWindHistory[WIND_RECORD_COUNT]  be changed to a \"real\" array to fit Debian-64?<br>\nAnd why???<br>\nI suppose you can test yourself on the RPi400 if needed.</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>20:53:13.971 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626\n</code></pre></div>\n\n<p>20:53:19.069 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n20:53:24.139 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n20:53:29.262 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n20:53:34.366 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n20:53:39.496 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n20:53:44.588 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n20:53:44.588 MESSAGE wind_history.cpp:192  <strong>*</strong> WD Reset m_SampleCount: 2680, Minute: 53<br>\n20:53:44.826 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110<br>\n21:00:00.291 MESSAGE ocpn_frame.cpp:5593 LOGBOOK:  2023-02-06 20:00:00 UTC  GPS Lat   58.22621 Lon   11.76264 COG ----- SOG   0.00 kts<br>\n21:17:06.664 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.73:10110<br>\n21:17:17.116 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110<br>\n21:18:05.267 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.73:10110<br>\n21:18:11.756 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110<br>\n21:18:46.485 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.73:10110<br>\n21:18:51.587 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:18:56.664 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:19:00.813 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110<br>\n21:19:06.313 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.73:10110<br>\n21:19:10.424 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:19:14.543 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110<br>\n21:19:21.212 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.73:10110<br>\n21:19:31.726 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:19:32.761 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110<br>\n21:19:41.505 MESSAGE comm_drv_n0183_net.cpp:330     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.73:10110<br>\n21:19:54.015 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:19:59.134 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:20:04.324 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:20:09.520 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:20:14.666 MESSAGE comm_bridge.cpp:181    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7626<br>\n21:20:17.783 MESSAGE wind_history.cpp:192  <strong>*</strong> WD Reset m_SampleCount: 2663, Minute: 20<br>\n21:20:17.963 MESSAGE comm_drv_n0183_net.cpp:512 TCP NetworkDataStream connection established: TCP:192.168.1.73:10110</p>\n</blockquote>",
        "id": 326246470,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675720886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span> <br>\nI believe you are on to something here, but I don't know what yet.<br>\nAre you saying that if the history is 2500 elements, then there is no gap or reset at all?  And all works correctly?<br>\nBut if the history is 3000 elements, then we get watchdog timeouts and reset?<br>\nIf that is correct, this looks like some kind of buffer overflow problem.</p>",
        "id": 326274396,
        "sender_full_name": "Dave Register",
        "timestamp": 1675737866
    },
    {
        "content": "<p>On thinking more, it must be some stall in the \"drawing\" methods, if the data capture in background seems normal when hidden.</p>",
        "id": 326276719,
        "sender_full_name": "Dave Register",
        "timestamp": 1675740022
    },
    {
        "content": "<p>Yes, when the  history is less than ~2600 elements there are no network trouble and no wind history reset. All works fine.<br>\n\"Some stall in the drawing method\". Yes, could be. Only present on Linux 64 bits?</p>",
        "id": 326290584,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675751593
    },
    {
        "content": "<p>Thoughts: This would boil down to:<br>\nInstrument.cpp: OnPaint()  can possible halt on row 125 Draw() that's waiting for<br>\neither of four occasions where SampleCount &gt; 2600 matter: <br>\nWind_history.cpp: 565, 589, 649 or 674.<br>\nWhich of the instructions there can be \"destroyed\" related to Linux 64bits data format? I can't tell. More data format knowledge needed.</p>",
        "id": 326306075,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675758959
    },
    {
        "content": "<p>Problem solved. Issue closed.<br>\nOld inefficient code in WindHistory consumed up to 1000 ms when data was drawn every second. No wonder why all including comm_bridge was heavily disturbed. Thanks to Dave, why does it seems so \"simple\" when you hack :),  the 1000 ms is now down to 30 ms.<br>\n<span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <br>\nI'll finalize and PR. Maybe make it draw every second turn instead. This resolution is not needed here.<br>\nThe BaroHistory graph is a copy of WindHistory. A PR for that will come as well.</p>",
        "id": 326456544,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1675803463
    },
    {
        "content": "<p>Very good news.<br>\nOCPN has many, many opportunities for \"peephole optimization\".  Especially performance issues that only surface on slow devices like RPi.<br>\nI look forward to the PR's.</p>",
        "id": 326459400,
        "sender_full_name": "Dave Register",
        "timestamp": 1675804509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  A Windows TCP issue.<br>\nI've a device feeding serial data to wifi TCP (Elfvin-EW10). Sometimes O losses the connection and don't reconnect.<br>\nThe many times repeated log message is: </p>\n<blockquote>\n<p>MESSAGE comm_drv_n0183_net.cpp:340     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120. Reconnection is disabled, waiting another 5 seconds.</p>\n</blockquote>\n<p>If I disable and enable the connection it's always established again.<br>\nIf I compare to SignalK, using the same connection he succeed to reconnect.<br>\nIs there anything to do in OCPN so an automatic reconnection appear also there and why \"Reconnection is disabled\"?<br>\nFor more details see attached log file extract.<br>\nSignalK log says: \"7/7/2023, 10:14:57 AM Reconnected 192.168.144 10120 retry 0 delay 100\"  ||  \"Connected to 192.168.144 10120\"<br>\nOCPN logs for the same time:<br>\n<a href=\"/user_uploads/33951/c9R1SOeujcjsafYAsUqTT9s_/OCPN_log_TCP-timeout.txt\">OCPN_log_TCP-timeout.txt</a></p>",
        "id": 374613436,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689167224
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span> <br>\nMore tests and discussion:</p>\n<p>I changed the config files settings for \"NoDataReconnect\" from \"0\" to \"1\" for TCP:192.168.1.144<br>\nNow when the connection is temporary halted new connection attempt are made until succeeded.<br>\nNote: The Elfin-EW10 seems to halt for a while every time its list of connected clients are decreased, e.g. one PC disconnected. Bad behavior, I agree, but we would be able to handle that?</p>\n<blockquote>\n<p>First test:<br>\n09:31:03.700 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:31:07.700 MESSAGE comm_bridge.cpp:186    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7625<br>\n09:31:08.700 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\n09:31:13.700 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:31:18.699 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\n09:31:23.699 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:31:28.699 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\n09:31:33.698 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:31:38.713 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\nSecond test:<br>\n09:47:13.867 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:47:18.882 MESSAGE comm_bridge.cpp:186    ***GPS Watchdog timeout at Lat:58.2262   Lon: 11.7625<br>\n09:47:18.945 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\n09:47:23.945 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:47:28.944 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\n09:47:33.944 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:47:38.944 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120<br>\n09:47:43.943 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120.<br>\n09:47:48.943 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10120</p>\n</blockquote>\n<p>Questions/discussion about the code philosophy:</p>\n<ol>\n<li>\n<p>Why is \"NoDataReconnect\" set to false for a new connection? (Strange variable name? Opposite function?) <br>\n   Or is the condition at comm_drv_n0183_net.cpp:336 a reversed \"if not\"?</p>\n</li>\n<li>\n<p>Why is the data stream watchdog set to 5 seconds only?</p>\n</li>\n<li>Would we increase, double?, the watchdog time for every unsuccessful reconnection and set it back again after success?</li>\n</ol>",
        "id": 375480661,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689411179
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span> <br>\n<span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span> <br>\n This config variable was added by Nohal, in commit <a href=\"https://github.com/opencpn/OpenCPN/commit/be7527d081f313af127e7c4e41df01cecc44be6c\">be7527d081f313af127e7c4e41df01cecc44be6c</a>.<br>\nAs I recall, it was done to avoid flooding a local network with repeated connection attempts when there is a TCP device on the net that may be transient, coming and going.  Sounds like exactly what you are seeing.<br>\nI searched for the gihub issue discussion,  could not find it.<br>\nI think we could do something as you suggest.  Arrange to make a \"few\" connection attempts, before giving up.  Not enough to flood, but enough to handle occasional network dropouts transparently.<br>\nPerhaps Pavel has some insight...</p>",
        "id": 375548649,
        "sender_full_name": "Dave Register",
        "timestamp": 1689427729
    },
    {
        "content": "<p><a href=\"https://github.com/OpenCPN/OpenCPN/issues/2824\">https://github.com/OpenCPN/OpenCPN/issues/2824</a> is the original issue. In short, fragile TCP servers fail if being reconnected to \"too frequently\". We are probably most interested in the reason why the device actually stops sending the data feed while not closing the connection. Anyway, we do have a mechanism to handle it, just not in the UI as we agreed not to put it there.</p>",
        "id": 375593798,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689439966
    },
    {
        "content": "<p>OK, thanks.<br>\nThe \"issue\" is now it's not working. When the flag \"NoDataReconnect\" is \"false\" the reconnection don't happens and the log floods as of my attached log above.<br>\nIf I set NoDataReconnect to \"1\" the connections is always established again after a delay. See my second post above.</p>",
        "id": 375606390,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689444314
    },
    {
        "content": "<p>I know, that is how it should work. I'm not sure breaking which broken server is the lesser evil here though.</p>",
        "id": 375635934,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689461120
    },
    {
        "content": "<p>The \"broken\" server here seems to use not more than a delay in data feed for about 60 seconds. I'd say we would arrange to survive that? Say five minutes before giving up? (And stop flooding the log when we gave up)</p>\n<p>The \"NetworkDataStream watchdog timeout\" is now 5 seconds. That's only half the time of the position watchdog. So here we will brake the connection in 5 seconds even if we can navigate without data in 10 seconds without notice.<br>\nI've also seen devices sending data at 0.2 Hz, 20 seconds. If that's the only data we're waiting for the NetworkDataStream watchdog timeout will close the connection before next data transmit. That's not how we want it I suppose?</p>",
        "id": 375679874,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689488209
    },
    {
        "content": "<p>More observations: </p>\n<ol>\n<li>\n<p>This TCP server data delay may be a Windows issue? I noticed no problem if one PC's OCPN is closing normally or shut down. But if the Win PC goes to sleep/hibernation the EW10 TCP server make a delay causing our NetworkDataStream watchdog to timeout.<br>\nAnd since the flag \"NoDataReconnect\" has a opposite function O will never reconnect. (The log message \"<em>Reconnection is disabled, waiting another %d seconds</em>\"  seems false?)</p>\n</li>\n<li>\n<p>If I first change:   <em>if (!GetParams().NoDataReconnect)</em>   to comply with the variable name and read <br>\n<em>if (GetParams().NoDataReconnect)</em>   O will try to connect again after the timeout.</p>\n</li>\n<li>\n<p>I also changed the N_DOG_TIMEOUT to 15 seconds. That's to explain by the log file why a possible GPS watchdog timed out.</p>\n</li>\n</ol>\n<p>With these changes it works here. O will reconnect even if a Win-sleep is disturbing the TCP router.<br>\nPlease, you're the experts, would these changes disturb anything else or can I PR?</p>",
        "id": 375697580,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689495900
    },
    {
        "content": "<p>With the above changes I also tried to power off and later on the TCP server. Reconnection still works.</p>\n<blockquote>\n<p>12:01:13.272 MESSAGE comm_bridge.cpp:186    ***GPS Watchdog timeout at Lat:58.2263   Lon: 11.7625<br>\n12:01:19.283 MESSAGE comm_drv_n0183_net.cpp:343     TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121.<br>\n12:03:03.394 MESSAGE comm_drv_n0183_net.cpp:523 TCP NetworkDataStream connection established: TCP:192.168.1.144:10121</p>\n</blockquote>\n<p>Thoughts?</p>",
        "id": 375716748,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689502168
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span> <br>\nOne fundamental question about this:<br>\nWat's the reason we timeout the TCP connection if it's up and running but no NMEA data received?<br>\nIt could actually be connected to a sensor sending data very rarely.  (e.g. a air temperature or a tank level.)<br>\nAgain comparing to SignalK he is just waiting.</p>",
        "id": 375825327,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689535569
    },
    {
        "content": "<p>But this is exactly what we do now. We just have an optional mechanism to reestablish the connection (Which was the default until 5.6.2 and caused fragile servers to fail)</p>",
        "id": 375833371,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689539497
    },
    {
        "content": "<p>Yes, we are waiting, agree, flooding the log every 5 seconds. That's a lot if data is sent only every 40 seconds.<br>\nSo my Q remains. Why do we have the TCP watchdog? Unless one hack the config file, e.g. set NoDataReconnect = 1,  it has no meaning.</p>",
        "id": 375885517,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689568510
    },
    {
        "content": "<p>Because there are cases where (broken) servers stop sending data without actually closing the network socket. If the only problem you have is the log file entries, those can sure be handled.</p>",
        "id": 375961453,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689588588
    },
    {
        "content": "<p>Is this related?  <a href=\"https://github.com/OpenCPN/OpenCPN/issues/3237\">https://github.com/OpenCPN/OpenCPN/issues/3237</a></p>",
        "id": 375961577,
        "sender_full_name": "Tony Voss",
        "timestamp": 1689588607
    },
    {
        "content": "<p>Yes, he log file flooding can be handled, agree.<br>\nI did more tests here:<br>\nIf we keep the function when NoDataReconnect  = false to protect the fragile servers you refer to we may as well try some tweak to overcome the servers I'm testing. That's when Win does: \"System is going to suspend.\" Then the EW10 server halts for a minute or so making all connected OCPN to partly timeout connection.  (SK don't care though.)<br>\nSo, If I change N_DOG_TIMEOUT from 5 to 90 seconds the problem is solved. Then the TCP server is again up and send its data.</p>",
        "id": 375961880,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689588667
    },
    {
        "content": "<p>I might be dumb, but what is the actual problem, except the fact that you do not want the messages in the log?</p>",
        "id": 375962356,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689588776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"554731\">@Tony Voss</span> I was never able to reproduce that issue, as stated there.</p>",
        "id": 375963492,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689589013
    },
    {
        "content": "<p>When N_DOG_TIMEOUT  is down to zero and NoDataReconnect = false the connection is not established again. <br>\nIf I set NoDataReconnect =true it's restarted again.<br>\nIf the timer is 90 seconds we do nothing but wait and then it's working after about 60 seconds.</p>",
        "id": 375963910,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689589093
    },
    {
        "content": "<p>Yes, that is the design. So the problem is the length of the timeout?</p>",
        "id": 375964372,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689589198
    },
    {
        "content": "<p>Yes, as it seems now.</p>",
        "id": 375964518,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689589218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"573239\">Pavel Kalian</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/Network.20problems/near/375963492\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"554731\">Tony Voss</span> I was never able to reproduce that issue, as stated there.</p>\n</blockquote>\n<p>I am not seeing it regularly.  When I prepare to sail, I turn on the router and maybe 8 out of 10 times all is well.  Otherwise I have to turn off the connection, apply, turn it back on and apply again.  Then all is well.</p>",
        "id": 375964724,
        "sender_full_name": "Tony Voss",
        "timestamp": 1689589263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span>  But that is the design, it informs you in the log that there is no data, and based on your <code>NoDataReconnect</code> settings either tries to resolve it be actively resetting the connection or not. So IMHO it still boils down that the only \"problem\" is that we \"log too much\"</p>",
        "id": 375965313,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689589386
    },
    {
        "content": "<p>Increasing the timeout is IMHO not a good solution for it and there will likely be people not happy about it</p>",
        "id": 375965611,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689589446
    },
    {
        "content": "<p>No, it's more than the log. When the the timer is out it seems we doing more than wait since the data is never seen again until restart of the connection.<br>\nIf the don't runs out we receive the data when it shows up again.</p>",
        "id": 375966504,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689589640
    },
    {
        "content": "<p>If the timer don't run out it should be...</p>",
        "id": 375966788,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689589700
    },
    {
        "content": "<p>I don't see why a longer timeout can be a big problem. For GPS and position we have watchdogs so not a navigational issue?</p>",
        "id": 375967486,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689589834
    },
    {
        "content": "<p>And again: The can be servers feeding data only every 40 seconds or more. That's not a failure and we should not close the connection.</p>",
        "id": 375968385,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689590003
    },
    {
        "content": "<p>We are not closing the connection. By default. That is the change between 5.8 and 5.6. 5.6 did close the connection, always, when there was no data received for the timeout period of time.</p>",
        "id": 375969525,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689590219
    },
    {
        "content": "<p>In 5.8, unless configured otherwise, we simply do nothing at all and wait.</p>",
        "id": 375969797,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689590275
    },
    {
        "content": "<p>\"Nothing at all\" = \"Write log message and do nothing at all\"</p>",
        "id": 375969964,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689590302
    },
    {
        "content": "<p>\"We are not closing the connection\" -  But something happens. When timer is 5 seconds the data is never seen again. If I set to 90 seconds data is again received after about 60 seconds. Some kind of difference it is. But I can do more testing of that?</p>",
        "id": 375970744,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689590473
    },
    {
        "content": "<p>The problem is so to say solved also if I in the config file set NoDataReconnect = true for that connection.<br>\nThat's an option for me but not really for every user.</p>",
        "id": 375971445,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689590610
    },
    {
        "content": "<p><code>NoDataReconnect=true</code> means we DO reset the socket.<br>\n<a href=\"https://github.com/OpenCPN/OpenCPN/blob/c2ffb36ebca8c3777f03ea4d42e24f897aa62609/src/comm_drv_n0183_net.cpp#L332-L343\">https://github.com/OpenCPN/OpenCPN/blob/c2ffb36ebca8c3777f03ea4d42e24f897aa62609/src/comm_drv_n0183_net.cpp#L332-L343</a></p>",
        "id": 375972151,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689590758
    },
    {
        "content": "<p>You can see that nothing at all is done if the setting is <code>false</code>, we simply hit the <code>return</code> at line 341</p>",
        "id": 375972426,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689590807
    },
    {
        "content": "<p>I know. But still he can be there for hours. See my first post about this and the attached log file. But I'll verify it again.<br>\nI'll be back.</p>",
        "id": 375973825,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689591110
    },
    {
        "content": "<p>Yes, we can be there for hours, if the socket is not reset by the server or the server does not start to send data for whichever reason. That is when you switch <code>NoDataReconnect</code> to <code>true</code> and OpenCPN handles it for you.</p>",
        "id": 375974521,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689591231
    },
    {
        "content": "<p>The price of course is the timeout may be too short for many valid scenarios</p>",
        "id": 375974928,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689591303
    },
    {
        "content": "<p>Or too long, if we make it longer.</p>",
        "id": 375974980,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689591317
    },
    {
        "content": "<p>We are talking around. Maybe another suggestion to discuss:<br>\nWhat if we have waited for more than say two minutes. Could we give up and make a reconnect instead?</p>",
        "id": 375979624,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689592247
    },
    {
        "content": "<p>We sure could</p>",
        "id": 375980210,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689592360
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>  Your the expert! Would you mind doing it? Or should I make a try?</p>",
        "id": 375981020,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689592504
    },
    {
        "content": "<p>I may, but not fast. On vacation in Europe with very limited time.</p>",
        "id": 375984359,
        "sender_full_name": "Pavel Kalian",
        "timestamp": 1689593186
    },
    {
        "content": "<p>Ok, we have no hurry since no release in near sight.<br>\nI can meanwhile make a try. Probably not a nice solution but I can at least test such a function.<br>\nThanks. Enjoy  the vacation.</p>",
        "id": 375985647,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689593451
    },
    {
        "content": "<p>Log result after my test to add another timer:</p>\n<blockquote>\n<p>17:23:41.713 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:23:46.704 MESSAGE comm_bridge.cpp:186    ***GPS Watchdog timeout at Lat:58.2263   Lon: 11.7625<br>\n17:23:46.708 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:23:51.717 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:23:56.718 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:01.716 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:06.711 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:11.714 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:16.707 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:21.713 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:26.712 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:31.708 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:36.718 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:41.713 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:46.713 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:51.713 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:24:56.715 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:01.706 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:06.709 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:11.724 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:16.737 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:21.724 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:26.733 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:31.726 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:36.732 MESSAGE comm_drv_n0183_net.cpp:347  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Reconnection is disabled, waiting another 5 seconds.<br>\n17:25:41.736 MESSAGE comm_drv_n0183_net.cpp:354  TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10121. Now we have waited for 120 seconds. Try to reconnect instead.<br>\n17:25:46.749 MESSAGE comm_drv_n0183_net.cpp:534 TCP NetworkDataStream connection established: TCP:192.168.1.144:10121</p>\n</blockquote>",
        "id": 376068813,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689607835
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"554731\">Tony Voss</span> <a href=\"#narrow/stream/332168-Master---5.2E8.2E0--.28was.3A-comms.29/topic/Network.20problems/near/375961577\">said</a>:</p>\n<blockquote>\n<p>Is this related?  <a href=\"https://github.com/OpenCPN/OpenCPN/issues/3237\">https://github.com/OpenCPN/OpenCPN/issues/3237</a></p>\n</blockquote>\n<p>If you receive a similar opencpn.log message as me this may be solved by PR: <a href=\"https://github.com/opencpn/OpenCPN/issues/3356\">#3356</a></p>\n<blockquote>\n<p>MESSAGE comm_drv_n0183_net.cpp:340 TCP NetworkDataStream watchdog timeout: TCP:192.168.1.144:10120. Reconnection is disabled, waiting another 5 seconds.</p>\n</blockquote>",
        "id": 376309853,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1689678972
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522486\">@Håkan Svensson</span> If you want to link to zulip discussions in for example github there is <a href=\"https://leamas.github.io/zulip-archive/\">https://leamas.github.io/zulip-archive/</a>. The purpose of this archive is to make it possible to create links (it's also visible to the google crawlers etc so it  can be googled)</p>",
        "id": 380227113,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1690789877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <a href=\"https://github.com/opencpn/OpenCPN/issues/3391\">#3391</a> looks non-trivial to me...</p>",
        "id": 382562436,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1691401851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  ocpn_plugin.h: problems. After API 118 update anything including ocpn_plugin.h generates tons of warnings. The root cause is  RenderGLOverlayMultiCanvas() and RenderOverlay().</p>\n<p>Situation for RenderGLOverlayMultiCanvas():</p>\n<div class=\"codehilite\"><pre><span></span><code>$ grep -U2 -A 3 RenderGLOverlayMultiCanvas ../libs/api-18/ocpn_plugin.h\n  opencpn_plugin_116(void *pmgr);\n  virtual ~opencpn_plugin_116();\n  virtual bool RenderGLOverlayMultiCanvas(wxGLContext *pcontext,\n                                          PlugIn_ViewPort *vp, int canvasIndex);\n  virtual bool RenderOverlayMultiCanvas(wxDC &amp;dc, PlugIn_ViewPort *vp,\n                                        int canvasIndex);\n--\n  /// when priority is OVERLAY_LEGACY (0)\n  /// \\return true if overlay was rendered, false otherwise\n  virtual bool RenderGLOverlayMultiCanvas(wxGLContext *pcontext,\n                                          PlugIn_ViewPort *vp,\n                                          int canvasIndex,\n                                          int priority = -1) ;\n</code></pre></div>\n<p>Here,  the compiler rightfully complains about the latter signature shadowing  the first one <strong>without</strong> overriding it. The problem is of course  <code>int priority = -1</code>which can be omitted and when so, produces the  same signature as the first one in 116.  The situation is the same for RenderOverlay.</p>\n<p>We really need to sort this out, the number of warnings is insane (34 lines for a simple plugin).</p>\n<p>My idea is that we could add the same parameter <code>int priority = -1</code>  also to the first definition, update the corresponding code with a matching <code>int priority</code> parameter which is ignored. That should not break any eggs in existing code.</p>\n<p>Thoughts?</p>",
        "id": 384118757,
        "sender_full_name": "Alec Leamas",
        "timestamp": 1691800204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"517002\">@Dave Register</span>  <span class=\"user-mention\" data-user-id=\"573239\">@Pavel Kalian</span>  <span class=\"user-mention\" data-user-id=\"399510\">@Alec Leamas</span> <br>\nAbout Windows suspend/hibernation issues for TCP connections.<br>\nWe have some discussions on the CF and more about this.<br>\nIt's of course connected to the general (Win?) timeout issue where I after diskussions with Pavel made the PR <a href=\"https://github.com/opencpn/OpenCPN/issues/3356\">#3356</a>.<br>\nNow to test if Win suspend is well detected I made some test hacks that's working good. TCP connections are restarted after a suspend resume.  See attached Git diff.<br>\nThe ideas mentioned in ocpn_frame.cpp: 6955:<br>\n      g_pMUX-&gt;ClearStreams();    and  g_pMUX-&gt;StartAllStreams();<br>\nwould of course be two valuable funktions if established.</p>\n<p>My ideas with the hack in the diff file is just to verify the detection of the Win suspend method. <br>\nThe result is clear from the log:  (the \"Reconnect after Windows suspend\" comes from my hack.)<br>\nSo, I think the Win hibernation issue would be rather easy to solve?</p>\n<div class=\"codehilite\"><pre><span></span><code>12:47:53.407 MESSAGE ocpn_frame.cpp:6936 System is going to suspend.\n17:23:46.757 MESSAGE ocpn_frame.cpp:6949 System resumed from suspend.\n17:24:00.653 MESSAGE ocpn_frame.cpp:6952 Restarting streams.\n.....\n.....\n17:24:01.533 MESSAGE comm_drv_n0183_net.cpp:350  TCP NetworkDataStream watchdog timeout: TCP:signalk.stupan.se:10112. Reconnection is disabled, waiting another 5 seconds.\n17:24:03.062 MESSAGE comm_drv_n0183_net.cpp:361 Reconnect after Windows suspend\n17:24:07.226 MESSAGE comm_bridge.cpp:186    ***GPS Watchdog timeout at Lat:57.6413   Lon: 11.6637\n17:24:08.072 MESSAGE comm_drv_n0183_net.cpp:541 TCP NetworkDataStream connection established: TCP:signalk.stupan.se:10112\n</code></pre></div>\n<p><a href=\"/user_uploads/33951/SsV6DAOsUefzMnpcfppKm59X/suspend_diff.txt\">suspend_diff.txt</a></p>",
        "id": 393537644,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1695835079
    },
    {
        "content": "<p>I can see also a SignalK connection doesn't reconnect  after a Win hibernation/suspend. Bu there I can't find a watchdog handling to \"hack\" in the same way as for TCP(N0183)?</p>",
        "id": 394892978,
        "sender_full_name": "Håkan Svensson",
        "timestamp": 1696443159
    }
]