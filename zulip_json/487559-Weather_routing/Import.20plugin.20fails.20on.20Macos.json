[
    {
        "content": "<p>The error message is \"Incompatible import plugin detected\".</p>\n<p>I'm new to OpenCPN development. I built both OpenCPN and weather routing_pi for the latest source in github, more specifically from:</p>\n<p><a href=\"https://github.com/rgleason/weather_routing_pi.git\">https://github.com/rgleason/weather_routing_pi.git</a></p>\n<p>% git log | head -5<br>\ncommit <a href=\"https://github.com/opencpn/OpenCPN/commit/04b82ab03d18c67a29c1d2f9b15307f18933dbb6\">04b82ab03d18c67a29c1d2f9b15307f18933dbb6</a><br>\nAuthor: Rick Gleason &lt;<a href=\"mailto:fcgleason@tgp-architects.com\">fcgleason@tgp-architects.com</a>&gt;<br>\nDate:   Tue Feb 25 20:38:31 2025 -0500<br>\n    1.15.21.20 + SR spd interprete for low winds</p>\n<p>And:</p>\n<p><a href=\"https://github.com/OpenCPN/OpenCPN.git\">https://github.com/OpenCPN/OpenCPN.git</a><br>\ngit log | head -5<br>\ncommit <a href=\"https://github.com/opencpn/OpenCPN/commit/060633f15922f520a81d872fd2b4a74a9216d65b\">060633f15922f520a81d872fd2b4a74a9216d65b</a><br>\nMerge: <a href=\"https://github.com/opencpn/OpenCPN/commit/92875bce4\">92875bce4</a> <a href=\"https://github.com/opencpn/OpenCPN/commit/516784d53\">516784d53</a><br>\nAuthor: bdbcat &lt;<a href=\"mailto:bdbcat@yahoo.com\">bdbcat@yahoo.com</a>&gt;<br>\nDate:   Tue Feb 25 22:53:45 2025 -0500</p>\n<p>I'm on MacOS Sequoia 15.3.1, on an M2 chip.</p>\n<p>I used pretty much the standard build commands documented for both:</p>\n<p>For OpenCPN:</p>\n<ul>\n<li>mkdir build</li>\n<li>cd build</li>\n<li>cmake ..</li>\n<li>make</li>\n<li>make create-dmg</li>\n</ul>\n<p>For weather_routing_pi:</p>\n<ul>\n<li>mkdir build</li>\n<li>cd build</li>\n<li>cmake ..</li>\n<li>make</li>\n<li>make package</li>\n<li>bash <a href=\"http://cloudsmith-upload.sh\">cloudsmith-upload.sh</a> # to embed the correct metdata.xml in .tar.gz.package.</li>\n</ul>\n<p>OpenCPN builds, installs and runs correctly. I am able to install the Weather Routing plugin from the package Manager catalog. </p>\n<p>But if I try to import the plugin package I built above, I get the error \"Incompatible import plugin detected\".</p>\n<p>The error apparently gets generated here:</p>\n<p><a href=\"https://github.com/OpenCPN/OpenCPN/blob/master/model/src/plugin_handler.cpp#L413-L414\">https://github.com/OpenCPN/OpenCPN/blob/master/model/src/plugin_handler.cpp#L413-L414</a></p>\n<p>Any help much appreciated.</p>",
        "id": 502201305,
        "sender_full_name": "Quinton Hoole",
        "timestamp": 1740635040
    },
    {
        "content": "<p>Quinton are you using the universal version?  Refer the ci directory and find the macOS universal script and follow that.   Perhaps you did?</p>\n<p>Dave may have some suggestions.</p>",
        "id": 502347409,
        "sender_full_name": "Rick Gleason",
        "timestamp": 1740679739
    },
    {
        "content": "<p>Just thought of something.</p>\n<p>Also I just thought of something, you should update your opencpn-libs module this is probably the error.</p>\n<p>There are scripts to do that see the testplugin BATCH directory.</p>\n<p>Also look at</p>\n<p><a href=\"https://github.com/jongough/testplugin_pi/issues/372\">https://github.com/jongough/testplugin_pi/issues/372</a></p>\n<p>Submodule <a href=\"https://github.com/OpenCPN/opencpn-libs\">OpenCPN/opencpn-libs</a> For commands see the Instructions at the bottom.</p>",
        "id": 502348442,
        "sender_full_name": "Rick Gleason",
        "timestamp": 1740680159
    },
    {
        "content": "<p>Quinton...<br>\nIf you run OpenCPN with \"-l debug\" option from the CLI, the logfile will give more information on the plugin compatibility checking and loading process.</p>",
        "id": 502478794,
        "sender_full_name": "Dave Register",
        "timestamp": 1740708671
    },
    {
        "content": "<p>I had the same issue and did the following:</p>\n<ol>\n<li>The <strong>metadata.xml</strong> file is not present in the generated file. I'm unclear why the build does not include the metadata.xml file by default.</li>\n<li>When trying to import the tar.gz file, OpenCPN complains it's the wrong architecture, e.g. expected architecture is darwin-wx32 but actual plugin architecture is darwin.</li>\n</ol>\n<p>Here are the workarounds:</p>\n<p>./ci/circleci-build-macos-universal.sh (but you need to hack it a bit to avoid running the sudo commands, it was not necessary in my case)</p>\n<p>cd build</p>\n<p>make</p>\n<p>make package</p>\n<p>This produces two files:<br>\n<strong>weather_routing_pi-1.15.21.0-darwin-arm64</strong> (which is an xml file without the XML extension)<br>\n<strong>weather_routing_pi-1.15.21.0-darwin-arm64;x86_64-15.3.1.tar.gz</strong><br>\n<strong>Manually edit the XML file to change \"darwin\" to \"darwin-wx32\":</strong></p>\n<p>&lt;target&gt;darwin&lt;/target&gt;<br>\n  &lt;build-target&gt;darwin&lt;/build-target&gt;</p>\n<p>&lt;target&gt;darwin-wx32&lt;/target&gt;<br>\n  &lt;build-target&gt;darwin-wx32&lt;/build-target&gt;</p>\n<p>Then after that step, rename the <strong>weather_routing_pi-1.15.21.0-darwin-arm64</strong>  file to metadata.xml and include it in the tar.gz. Then finally it's possible to import the plugin in OpenCPN.</p>",
        "id": 502479545,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1740709190
    },
    {
        "content": "<p>And the script:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"ch\">#!/bin/bash</span>\n\n\n\n<span class=\"c1\"># Check if correct number of arguments is provided</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span><span class=\"nv\">$#</span><span class=\"w\"> </span>-lt<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n\n<span class=\"w\">    </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Usage: </span><span class=\"nv\">$0</span><span class=\"s2\"> &lt;tar.gz_file&gt; &lt;xml_file&gt;&quot;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">exit</span><span class=\"w\"> </span><span class=\"m\">1</span>\n\n<span class=\"k\">fi</span>\n\n\n\n<span class=\"nv\">TAR_FILE</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"nv\">$1</span><span class=\"s2\">&quot;</span>\n\n<span class=\"nv\">XML_FILE</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"nv\">$2</span><span class=\"s2\">&quot;</span>\n\n\n\n<span class=\"c1\"># Check if files exist</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>!<span class=\"w\"> </span>-f<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TAR_FILE</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n\n<span class=\"w\">    </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Error: Archive file </span><span class=\"nv\">$TAR_FILE</span><span class=\"s2\"> does not exist.&quot;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">exit</span><span class=\"w\"> </span><span class=\"m\">1</span>\n\n<span class=\"k\">fi</span>\n\n\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>!<span class=\"w\"> </span>-f<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$XML_FILE</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n\n<span class=\"w\">    </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Error: XML file </span><span class=\"nv\">$XML_FILE</span><span class=\"s2\"> does not exist.&quot;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">exit</span><span class=\"w\"> </span><span class=\"m\">1</span>\n\n<span class=\"k\">fi</span>\n\n\n\n<span class=\"c1\"># Create a temporary directory</span>\n\n<span class=\"nv\">TMP_DIR</span><span class=\"o\">=</span><span class=\"k\">$(</span>mktemp<span class=\"w\"> </span>-d<span class=\"k\">)</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span><span class=\"nv\">$?</span><span class=\"w\"> </span>-ne<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n\n<span class=\"w\">    </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Error: Failed to create temporary directory.&quot;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">exit</span><span class=\"w\"> </span><span class=\"m\">1</span>\n\n<span class=\"k\">fi</span>\n\n\n\n<span class=\"c1\"># Extract the base directory name from the tar file</span>\n\n<span class=\"nv\">BASE_DIR</span><span class=\"o\">=</span><span class=\"k\">$(</span>tar<span class=\"w\"> </span>-tzf<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TAR_FILE</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>head<span class=\"w\"> </span>-1<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>cut<span class=\"w\"> </span>-d/<span class=\"w\"> </span>-f1<span class=\"k\">)</span>\n\n\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span>-z<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$BASE_DIR</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n\n<span class=\"w\">    </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Error: Could not determine base directory in archive.&quot;</span>\n\n<span class=\"w\">    </span>rm<span class=\"w\"> </span>-rf<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TMP_DIR</span><span class=\"s2\">&quot;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">exit</span><span class=\"w\"> </span><span class=\"m\">1</span>\n\n<span class=\"k\">fi</span>\n\n\n\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Detected base directory: </span><span class=\"nv\">$BASE_DIR</span><span class=\"s2\">&quot;</span>\n\n\n\n<span class=\"c1\"># Extract the archive to the temporary directory</span>\n\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Extracting archive...&quot;</span>\n\ntar<span class=\"w\"> </span>-xzf<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TAR_FILE</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span>-C<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TMP_DIR</span><span class=\"s2\">&quot;</span>\n\n\n\n<span class=\"c1\"># Copy the XML file as metadata.xml to the base directory</span>\n\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Adding metadata.xml...&quot;</span>\n\ncp<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$XML_FILE</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TMP_DIR</span><span class=\"s2\">/</span><span class=\"nv\">$BASE_DIR</span><span class=\"s2\">/metadata.xml&quot;</span>\n\n\n\n<span class=\"c1\"># Create a new archive with the added metadata file</span>\n\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Creating new archive...&quot;</span>\n\n<span class=\"nv\">ORIG_DIR</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>\n\n<span class=\"nb\">cd</span><span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TMP_DIR</span><span class=\"s2\">&quot;</span>\n\ntar<span class=\"w\"> </span>-czf<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$ORIG_DIR</span><span class=\"s2\">/</span><span class=\"si\">${</span><span class=\"nv\">TAR_FILE</span><span class=\"p\">%.tar.gz</span><span class=\"si\">}</span><span class=\"s2\">_with_metadata.tar.gz&quot;</span><span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$BASE_DIR</span><span class=\"s2\">&quot;</span>\n\n<span class=\"nb\">cd</span><span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$ORIG_DIR</span><span class=\"s2\">&quot;</span>\n\n\n\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Cleaning up...&quot;</span>\n\nrm<span class=\"w\"> </span>-rf<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$TMP_DIR</span><span class=\"s2\">&quot;</span>\n\n\n\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Done! New archive created: </span><span class=\"si\">${</span><span class=\"nv\">TAR_FILE</span><span class=\"p\">%.tar.gz</span><span class=\"si\">}</span><span class=\"s2\">_with_metadata.tar.gz&quot;</span>\n</code></pre></div>",
        "id": 502479605,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1740709211
    },
    {
        "content": "<p>The crucial step is to ensure the targets are set to \"darwin-wx32\".</p>",
        "id": 502479745,
        "sender_full_name": "Sebastien Rosset",
        "timestamp": 1740709313
    }
]